{"version":3,"sources":["webpack:///./src/utils.ts","webpack:///./src/main.ts","webpack:///./src/adapters/luis.ts","webpack:///./src/adapters/rasa.ts","webpack:///./src/adapters/snips.ts","webpack:///./src/adapters/web.ts","webpack:///./web/lib/editorConfig.ts","webpack:///./web/components/Editor/editorStyles.tsx","webpack:///./web/components/Editor/Editor.tsx","webpack:///./web/lib/utils.ts","webpack:///./web/components/globalStyles.tsx","webpack:///./web/components/Logo.tsx","webpack:///./web/pages/index.tsx","webpack:///./parser/chatito.js"],"names":["maxSentencesForSentence","entities","stack","sentence","reduce","accumulator","t","acc","def","type","innerEntityKey","value","Error","inner","probability","key","s","innerEntityVariations","maxSentencesForEntity","opt","ed","entity","entitiesStack","numberOfSlotsInStack","found","find","et","last","validateAndPushToStack","map","val","isObject","item","Array","mergeDeep","target","source","Object","isArray","undefined","_Object$assign","_Object$assign2","chatito","require","chance","chatitoFormatPostProcess","data","arr","next","i","arrShadow","length","lastWord","replace","trim","assign","getVariationsFromEntity","_ref","asyncToGenerator_default","regenerator_default","a","mark","_callee","optional","cache","variationKey","cacheKey","cacheStats","counts","maxCounts","definedSentenceProbabilities","indexesOfSentencesWithNullProbability","sumOfTotalProbabilitiesDefined","_iterator","_isArray","_i","_ref2","c","mxc","prob","totalMaxCountsToShareBetweenNullProbSent","probabilities","currentEntityCache","optionalProb","sentenceIndex","slotSynonyms","_iterator2","_isArray2","_i2","_ref3","slotsInSentenceKeys","currentCache","sentenceVariation","returnSentenceTokens","_iterator3","_isArray3","_i3","_ref4","returnToken","wrap","_context","prev","Symbol","iterator","abrupt","done","utils","parseInt","Number","p","n","main_chance","bool","likelihood","Set","Map","sent","args","stop","_x","_x2","_x3","_x4","apply","this","arguments","astFromString","str","datasetFromString","writterFn","importer","currentPath","ast","datasetFromAST","getImports","from","to","fileContent","dsl","importAst","outAst","ett","concat","filePath","e","message","JSON","location","_ref5","_callee2","initialAst","importHandler","currPath","operatorDefinitions","intentKeys","_i4","_intentKeys","intentKey","maxPossibleCombinations","maxIntentExamples","entityArgs","trainingN","testingN","generatedTrainingExamplesCount","generatedTestingExamplesCount","intentMax","maxEx","globalCache","collitionsCache","duplicatesCounter","intentSentence","utterance","utteranceString","completedTraining","completedTesting","isTrainingExample","maxDupes","maxDupesLimit","m","_context2","Intent","Slot","Alias","od","odKey","training","testing","Math","console","_x5","_x6","_x7","_x8","luis_adapter","_adapter","formatOptions","utteranceWriter","example","slot","endCharIndex","entityName","startCharIndex","text","intentName","entityLabels","gen","rasa_adapter","adapters_rasa_adapter","synonyms","rasa_nlu_data","regex_features","entity_synonyms","common_examples","synonym","end","start","intent","k","snips_adapter","adapters_snips_adapter","synonymsForSlots","language","intents","utterances","u","ret","slotKey","synonymsValue","push","web_adapter","adapters_web_adapter","dataset","tabs","title","chatitoPrism","comments","pattern","greedy","imports","intentDefinition","inside","intentArguments","slotDefinition","slotArguments","alias","default","rasaDefaultOptions","snipsDefaultOptions","AlertNotification","styled","withConfig","displayName","componentId","state","CodeStyles","TabButton","active","CloseTab","EditorHeader","TabsAreaButton","TabsArea","EditorWrapper","Drawer","showDrawer","EditorOverlay","BlockWrapper","BlockWrapperTitle","CloseDrawerButton","DrawerFormField","SelectWrapper","CheckboxWrapper","adapters","web_namespaceObject","rasa","rasa_namespaceObject","snips","snips_namespaceObject","luis","luisAdapter","CodeFlask","ReactJson","window","Editor","func","wait","timeout","error","warning","activeTabIndex","adapterOptions","currentAdapter","useCustomOptions","tabsContainer","React","codeflask","editorUpdatesSetupCount","codeInputValue","debouncedTabDSLValidation","_this","validation","getDSLValidation","newState","setState","saveToLocalStorage","_len","_key","context","clearTimeout","setTimeout","renderDatasetGeneratorSettings","react","style","display","flexDirection","borderRight","htmlFor","id","name","onChange","onAdapterChange","checked","onCustomOptionsCheckboxChange","renderEditAdapterOptions","padding","textAlign","onClick","generateDataset","fontSize","borderTop","flex","margin","src","theme","iconStyle","enableClipboard","displayDataTypes","collapsed","onEdit","onEditAdapterOptions","onAdd","onDelete","renderDatasetPreviewer","renderTabButton","onCloseTab","closerTab","changeTab","onCloseDrawer","changes","updated_src","onAddFile","filename","prompt","current","scrollTo","left","scrollWidth","behavior","onToggleDrawer","validateChatitoFiles","t0","alert","saveTabs","saveAdapterOptions","saveCurrentAdapter","localStorage","loadFromLocalIfPresent","parseAsJSON","loadFromLocalStorage","cb","localTabs","localAdapterOptions","localCurrentAdapter","updateCode","setLineNumber","ati","newActiveTabIndex","slice","intentsWithoutLimit","filter","column","some","tab","importFile","startPath","endPath","tabFound","testingDataset","adapter","_loop2","_ret","datasetBlob","testingBlob","_context3","v","entries","delegateYield","t1","Blob","saveAs","Date","getTime","componentDidMount","_this2","flask","lineNumbers","code","render","alertState","innerRef","backgroundColor","disabled","stopPropagation","Global","createGlobalStyle","_templateObject","Header","Logo","fill","viewBox","version","x","y","stroke","d","Index","Helmet_default","rel","sizes","href","__PATH_PREFIX__","color","content","width","minWidth","height","paddingLeft","Editor_Editor","peg$SyntaxError","expected","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","classEscape","inverted","any","other","description","hex","ch","charCodeAt","toString","toUpperCase","j","descriptions","sort","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$literalExpectation","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","o","peg$c29","peg$c30","peg$c31","peg$c32","variation","peg$c33","peg$c34","peg$c35","peg$c36","op","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$otherExpectation","peg$c44","peg$c45","peg$c46","level","STEP","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c60","peg$classExpectation","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","curr","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","ek","ev","peg$c74","peg$c75","peg$c76","chars","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","char","peg$c82","sequence","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","digits","String","fromCharCode","peg$c104","peg$c105","peg$currPos","peg$savedPos","peg$posDetailsCache","line","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","peg$parseImportFile","peg$parseTopLevelStatement","peg$parseCommentLine","s2","s5","peg$parseEOL","s3","peg$parseEntityBody","peg$parseEntityArguments","peg$parseEntityIntentDefinition","peg$parseIndent","peg$parseIntentAndSlotInnerStatements","peg$parseDedent","peg$parseIntentDefinition","s4","substr","peg$parseSlotKeywordLiteral","peg$parseSlotVariationDefinition","peg$parseEntitySlotDefinition","peg$parseSlotInnerStatement","peg$parseSlotInnerStatements","peg$parseSlotDefinition","peg$parseEntityAliasDefinition","peg$parseAliasDefinition","peg$parseProbabilityOperatorDefinition","s6","s7","charAt","peg$parseBasicKeywordLiteral","peg$parseEntityOpt","peg$parseEntityKeywordLiteral","peg$parseIntentAndSlotKeywordLiterals","s8","peg$parseAnyTextWithSlotAndAlias","peg$parseIntentAndSlotInnerStatement","peg$parseSamedent","peg$parseOptionalSlot","peg$parseOptionalAlias","peg$parseIntentAndSlotValidInner","peg$parseEOS","peg$parseSlotVariationStartDefinition","peg$parseSlotOptionalBody","peg$parseSlotKeywordLiterals","peg$parseAnyTextWithAlias","peg$parseSlotValidInner","peg$parseEntityOptionalBody","peg$parseAnyTextWithoutEOL","peg$parseDoubleSlashCommentLine","peg$parseHashCommentLine","s9","peg$parseEOF","peg$parseEOLNonWindows","peg$parseEOLWindows","peg$parseEntityArg","peg$parseArgumentKeyValueString","peg$parseDoubleQuotedString","peg$parseSingleQuotedString","peg$parseStringEscapedChars","peg$parseHEXDIG","substring","test"],"mappings":"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","file":"component---web-pages-index-tsx-d550f9b17544afb13fac.js","sourcesContent":["import { IChatitoEntityAST, IEntities, ISingleSentence } from './types';\n\n//  Durstenfeld shuffle, a computer-optimized version of Fisher-Yates:\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nexport const shuffle = <T>(array: T[]) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n};\n\nexport const validateAndPushToStack = (entity: IChatitoEntityAST, entitiesStack: IChatitoEntityAST[]) => {\n    let numberOfSlotsInStack = 0;\n    const found = entitiesStack.find(et => {\n        if (et.type === 'SlotDefinition') {\n            numberOfSlotsInStack++;\n        }\n        return et.key === entity.key && et.type === entity.type;\n    });\n    if (found) {\n        const last = entitiesStack.pop() || found;\n        throw new Error(`Invalid nesting of entity: '${entity.key}' inside entity '${last.key}'. Infinite loop prevented.`);\n    }\n    if (numberOfSlotsInStack !== 0 && entity.type === 'SlotDefinition') {\n        const last = entitiesStack.pop() || entity;\n        throw new Error(`Invalid nesting of slot: '${entity.key}' inside '${last.key}'. An slot can't reference other slot.`);\n    }\n    entitiesStack.push(entity);\n    return entitiesStack;\n};\n\nexport const maxSentencesForSentence = (entities: IEntities, stack?: IChatitoEntityAST[]) => (sentence: ISingleSentence) => {\n    const sr = sentence.sentence.reduce((accumulator, t) => {\n        let acc = accumulator;\n        if (t.type === 'Slot' || t.type === 'Alias') {\n            const def = entities[t.type];\n            const innerEntityKey = t.variation ? `${t.value}#${t.variation}` : t.value;\n            if (!def[innerEntityKey]) {\n                if (t.type === 'Alias') {\n                    def[innerEntityKey] = {\n                        inner: [\n                            {\n                                sentence: [{ value: innerEntityKey, type: 'Text' }],\n                                probability: null\n                            }\n                        ],\n                        key: t.value,\n                        type: 'AliasDefinition'\n                    };\n                } else {\n                    throw new Error(`${t.type} not defined: ${innerEntityKey}`);\n                }\n            }\n            const s = stack ? stack.slice(0) : [];\n            let innerEntityVariations = maxSentencesForEntity(def[innerEntityKey], entities, s);\n            if (t.opt) {\n                innerEntityVariations++;\n            }\n            acc = acc * innerEntityVariations;\n        }\n        return acc;\n    }, 1);\n    return sr;\n};\n\nexport const maxSentencesForEntity = (ed: IChatitoEntityAST, entities: IEntities, stack: IChatitoEntityAST[] = []): number => {\n    validateAndPushToStack(ed, stack);\n    return ed.inner.map(maxSentencesForSentence(entities, stack)).reduce((acc, val) => acc + val);\n};\n\n// Deep merge objects\n// https://gist.github.com/Salakar/1d7137de9cb8b704e48a\nconst isObject = (item: any) => item && typeof item === 'object' && !Array.isArray(item) && item !== null;\nconst isArray = (item: any) => {\n    if (typeof Array.isArray === 'undefined') {\n        return Object.prototype.toString.call(item) === '[object Array]';\n    } else {\n        return Array.isArray(item);\n    }\n};\nexport const mergeDeep = <T>(target: any, source: any): T => {\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isArray(source[key])) {\n                if (target[key] === undefined) {\n                    target[key] = [];\n                }\n                target[key] = target[key].concat(source[key]);\n            } else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n    }\n    return target;\n};\n","import { Chance } from 'chance';\nimport {\n    IChatitoCache,\n    IChatitoEntityAST,\n    IChatitoParser,\n    IEntities,\n    IEntityDef,\n    ISentenceTokens,\n    IStatCache,\n    IUtteranceWriter\n} from './types';\nimport * as utils from './utils';\n\n// tslint:disable-next-line:no-var-requires\nconst chatito = require('../parser/chatito') as IChatitoParser;\nconst chance = new Chance();\n\nconst chatitoFormatPostProcess = (data: ISentenceTokens[]) => {\n    const arr = data.reduce(\n        (accumulator: ISentenceTokens[], next: ISentenceTokens, i, arrShadow) => {\n            if (accumulator.length) {\n                const lastWord = accumulator[accumulator.length - 1];\n                if (lastWord.type === next.type && lastWord.type === 'Text') {\n                    accumulator[accumulator.length - 1] = {\n                        type: lastWord.type,\n                        value: (lastWord.value + next.value).replace(/\\s+/g, ' ')\n                    };\n                } else {\n                    accumulator.push(next);\n                }\n            } else if (next.value.trim()) {\n                accumulator.push(next);\n            }\n            if (i === arrShadow.length - 1) {\n                // if its the last token of a sentence\n                // remove empty strings at the end\n                if (accumulator.length) {\n                    if (!accumulator[accumulator.length - 1].value.trim()) {\n                        accumulator.pop();\n                    }\n                    accumulator[accumulator.length - 1] = Object.assign({}, accumulator[accumulator.length - 1], {\n                        value: accumulator[accumulator.length - 1].value.replace(/\\s+$/g, '')\n                    });\n                }\n            }\n            return accumulator;\n        },\n        [] as ISentenceTokens[]\n    );\n    if (arr.length) {\n        arr[0] = Object.assign({}, arr[0], {\n            value: arr[0].value.replace(/^\\s+/, '')\n        });\n    }\n    if (!arr.length) {\n        throw new Error(`Some sentence generated an empty string. Can't map empty to an intent.`);\n    }\n    return arr;\n};\n\n// recursive function that generates variations using a cache\n// that uses counts to avoid repetitions\nconst getVariationsFromEntity = async <T>(\n    ed: IChatitoEntityAST,\n    entities: IEntities,\n    optional: boolean,\n    cache: IChatitoCache\n): Promise<ISentenceTokens[]> => {\n    // if this entity is a slot variation, add that as the key\n    const variationKey = ed.variation ? `#${ed.variation}` : '';\n    const cacheKey = `${ed.type}-${ed.key}${variationKey}`;\n    let cacheStats = cache.get(cacheKey) as IStatCache;\n    if (!cacheStats) {\n        // if the entity is not cache, create an empty cache for it\n        const counts: IChatitoCache[] = [];\n        const maxCounts: number[] = []; // calcs the max possible utterancees for each sentence\n        const definedSentenceProbabilities: Array<number | null> = []; // the posibility operators defined for sentences\n        const indexesOfSentencesWithNullProbability: number[] = [];\n        let sumOfTotalProbabilitiesDefined = 0;\n        for (const c of ed.inner) {\n            // get counts for each of the sentences inside the entity\n            counts.push(new Map());\n            let mxc = utils.maxSentencesForSentence(entities)(c);\n            if (optional) {\n                mxc++;\n            }\n            maxCounts.push(mxc);\n            if (c.probability === null) {\n                indexesOfSentencesWithNullProbability.push(definedSentenceProbabilities.length);\n                definedSentenceProbabilities.push(null);\n            } else {\n                const prob = parseInt(c.probability || '', 10);\n                if (!Number.isInteger(prob)) {\n                    throw new Error(`Probability \"${c.probability}\" must be an integer value. At ${cacheKey}`);\n                }\n                if (prob < 1 || prob > 100) {\n                    throw new Error(`Probability \"${c.probability}\" must be from 1 to 100. At ${cacheKey}`);\n                }\n                sumOfTotalProbabilitiesDefined += prob;\n                definedSentenceProbabilities.push(prob);\n            }\n        }\n        if (sumOfTotalProbabilitiesDefined && sumOfTotalProbabilitiesDefined > 100) {\n            throw new Error(\n                `The sum of sentence probabilities (${sumOfTotalProbabilitiesDefined}) for an entity can't be higher than 100%. At ${cacheKey}`\n            );\n        }\n        // get the sum of all defined posibility operators inside the entity and validate it\n        const totalMaxCountsToShareBetweenNullProbSent =\n            indexesOfSentencesWithNullProbability.map(i => maxCounts[i]).reduce((p, n) => (p || 0) + (n || 0), 0) || 0;\n        // calculate the split of remaining probability for sentences that don't define them\n        // const realProbabilities = maxCounts.map(m => (m * 100) / sumOfTotalMax);\n        const probabilities = definedSentenceProbabilities.map((p, i) =>\n            p === null\n                ? (((maxCounts[i] * 100) / totalMaxCountsToShareBetweenNullProbSent) * (100 - sumOfTotalProbabilitiesDefined)) / 100\n                : p\n        );\n        const currentEntityCache: IStatCache = { counts, maxCounts, optional, probabilities };\n        cache.set(cacheKey, currentEntityCache);\n        cacheStats = cache.get(cacheKey) as IStatCache;\n    }\n    // NOTE: if an entity has 5 sentences we add one (the optional empty sentence) and get that probability\n    const optionalProb = 100 / (cacheStats.probabilities.length + 1);\n    let sentenceIndex = chance.weighted(Array.from(cacheStats.probabilities.keys()), cacheStats.probabilities);\n    if (cacheStats.optional && chance.bool({ likelihood: optionalProb })) {\n        sentenceIndex = -1;\n    }\n    if (sentenceIndex === -1) {\n        return [];\n    }\n    const sentence = ed.inner[sentenceIndex].sentence;\n    let accumulator: ISentenceTokens[] = [];\n    // For slots where a sentence is composed of only one alias, we add the synonym tag,\n    // to denote that the generated alias is a synonym of its alias name\n    const slotSynonyms = ed.type === 'SlotDefinition' && sentence.length === 1 && sentence[0].type === 'Alias';\n    for (const t of sentence) {\n        // slots and alias entities generate the sentences recursively\n        const slotsInSentenceKeys: Set<string> = new Set([]);\n        if (t.type === 'Slot' || t.type === 'Alias') {\n            const def = entities[t.type];\n            const innerEntityKey = t.variation ? `${t.value}#${t.variation}` : t.value;\n            const currentCache = slotsInSentenceKeys.has(innerEntityKey) ? cacheStats.counts[sentenceIndex] : new Map();\n            slotsInSentenceKeys.add(innerEntityKey);\n            const sentenceVariation = await getVariationsFromEntity(def[innerEntityKey], entities, !!t.opt, currentCache);\n            if (sentenceVariation.length) {\n                const returnSentenceTokens = chatitoFormatPostProcess(sentenceVariation);\n                for (const returnToken of returnSentenceTokens) {\n                    if (slotSynonyms) {\n                        returnToken.synonym = t.value;\n                    }\n                    if (t.type === 'Slot') {\n                        if (def[innerEntityKey].args) {\n                            returnToken.args = def[innerEntityKey].args;\n                        }\n                        returnToken.value = returnToken.value.trim();\n                        returnToken.type = t.type;\n                        returnToken.slot = t.value;\n                    }\n                    accumulator = accumulator.concat(returnToken);\n                }\n            }\n        } else {\n            accumulator = accumulator.concat(t);\n        }\n    }\n    return accumulator;\n};\n\nexport type IFileImporter = (\n    fromPath: string,\n    importFile: string\n) => {\n    filePath: string;\n    dsl: string;\n};\n\nexport const astFromString = (str: string) => chatito.parse(str);\nexport const datasetFromString = (str: string, writterFn: IUtteranceWriter, importer?: IFileImporter, currentPath?: string) => {\n    const ast = astFromString(str);\n    return datasetFromAST(ast, writterFn, importer, currentPath);\n};\n\nexport const getImports = (from: string, to: string, importer: IFileImporter) => {\n    const fileContent = importer(from, to);\n    if (!fileContent || !fileContent.dsl) {\n        throw new Error(`Failed importing ${to}`);\n    }\n    try {\n        const importAst = astFromString(fileContent.dsl);\n        let outAst: IChatitoEntityAST[] = [];\n        importAst.forEach(ett => {\n            if (ett.type === 'ImportFile' && ett.value) {\n                outAst = [...outAst, ...getImports(fileContent.filePath, ett.value, importer)];\n            } else if (ett.type === 'AliasDefinition' || ett.type === 'SlotDefinition') {\n                outAst = [...outAst, ett];\n            }\n        });\n        return outAst;\n    } catch (e) {\n        throw new Error(`Failed importing ${to}. ${e.message} - ${JSON.stringify(e.location)}`);\n    }\n};\n\nexport const datasetFromAST = async (\n    initialAst: IChatitoEntityAST[],\n    writterFn: IUtteranceWriter,\n    importHandler?: IFileImporter,\n    currPath?: string\n) => {\n    const operatorDefinitions: IEntities = { Intent: {}, Slot: {}, Alias: {} };\n    if (!initialAst || !initialAst.length) {\n        return;\n    }\n    const importer = importHandler ? importHandler : () => ({ filePath: '', dsl: '' });\n    const currentPath = currPath ? currPath : '';\n    // gete imports first\n    let ast: IChatitoEntityAST[] = [...initialAst];\n    initialAst.forEach(od => {\n        if (od.type === 'ImportFile' && od.value) {\n            ast = [...ast, ...getImports(currentPath, od.value, importer)];\n        }\n    });\n    ast.forEach(od => {\n        let entity: IEntityDef;\n        if (od.type === 'IntentDefinition') {\n            entity = operatorDefinitions.Intent;\n        } else if (od.type === 'SlotDefinition') {\n            entity = operatorDefinitions.Slot;\n        } else if (od.type === 'AliasDefinition') {\n            entity = operatorDefinitions.Alias;\n        } else if (od.type === 'Comment' || od.type === 'ImportFile') {\n            return; // skip comments\n        } else {\n            throw new Error(`Unknown definition definition for ${od.type}`);\n        }\n        const odKey = od.variation ? `${od.key}#${od.variation}` : od.key;\n        if (entity[odKey]) {\n            throw new Error(`Duplicate definition for ${od.type} '${odKey}'`);\n        }\n        entity[odKey] = od;\n    });\n    const intentKeys = Object.keys(operatorDefinitions.Intent);\n    if (!intentKeys || !intentKeys.length) {\n        return;\n    }\n    for (const intentKey of intentKeys) {\n        // and for all tokens inside the sentence\n        const maxPossibleCombinations = utils.maxSentencesForEntity(operatorDefinitions.Intent[intentKey], operatorDefinitions);\n        let maxIntentExamples = maxPossibleCombinations; // counter that will change\n        const entityArgs = operatorDefinitions.Intent[intentKey].args;\n        // by default if no training or testing arguments are declared, all go to training\n        let trainingN = maxIntentExamples;\n        let testingN = 0;\n        let generatedTrainingExamplesCount = 0;\n        let generatedTestingExamplesCount = 0;\n        if (entityArgs) {\n            if (entityArgs.training) {\n                trainingN = parseInt(entityArgs.training, 10);\n                if (trainingN < 1) {\n                    throw new Error(`The 'training' argument for ${intentKey} must be higher than 0.`);\n                }\n                if (entityArgs.testing) {\n                    testingN = parseInt(entityArgs.testing, 10);\n                    if (testingN < 1) {\n                        throw new Error(`The 'testing' argument for ${intentKey} must be higher than 0.`);\n                    }\n                }\n            }\n            const intentMax = trainingN + testingN;\n            if (intentMax > maxIntentExamples) {\n                throw new Error(`Can't generate ${intentMax} examples. Max possible examples is ${maxIntentExamples}`);\n            } else if (intentMax < maxIntentExamples) {\n                maxIntentExamples = intentMax;\n            }\n        }\n        const maxEx = maxIntentExamples;\n        const globalCache: IChatitoCache = new Map();\n        const collitionsCache: { [id: string]: boolean } = {};\n        let duplicatesCounter = 0;\n        while (maxIntentExamples) {\n            const intentSentence = await getVariationsFromEntity(\n                operatorDefinitions.Intent[intentKey],\n                operatorDefinitions,\n                false,\n                globalCache\n            );\n            const utterance = chatitoFormatPostProcess(intentSentence);\n            const utteranceString = utterance.reduce((p, n) => p + n.value, '');\n            if (!collitionsCache[utteranceString]) {\n                collitionsCache[utteranceString] = true;\n                const completedTraining = generatedTrainingExamplesCount >= trainingN;\n                const completedTesting = generatedTestingExamplesCount >= testingN;\n                let isTrainingExample = !completedTraining;\n                if (!completedTraining && !completedTesting) {\n                    // reference: https://stackoverflow.com/questions/44263229/generate-a-random-boolean-70-true-30-false\n                    isTrainingExample = Math.random() < 0.7;\n                }\n                writterFn(utterance, intentKey, isTrainingExample);\n                maxIntentExamples--;\n                if (isTrainingExample) {\n                    generatedTrainingExamplesCount++;\n                } else {\n                    generatedTestingExamplesCount++;\n                }\n            } else {\n                duplicatesCounter++;\n                // note: trick to make all combinations for small datasets, but avoid them for large ones\n                const maxDupes = maxPossibleCombinations * maxPossibleCombinations;\n                const maxDupesLimit = Math.floor(maxPossibleCombinations / 2);\n                if (duplicatesCounter > (maxPossibleCombinations > 10000 ? maxDupesLimit : maxDupes)) {\n                    // prevent cases where duplicates are part of the entity definitions\n                    let m = `Too many duplicates while generating dataset! Looks like we have probably reached `;\n                    m += `the maximun ammount of possible unique generated examples. `;\n                    m += `The generator has stopped at ${maxEx - maxIntentExamples} examples for intent ${intentKey}.`;\n                    // tslint:disable-next-line:no-console\n                    console.warn(m);\n                    maxIntentExamples = 0;\n                }\n            }\n        }\n    }\n};\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface ILuisEntityLabel {\n    startCharIndex: number;\n    endCharIndex: number;\n    entityName: string;\n}\nexport interface ILuisExample {\n    text: string;\n    intentName: string;\n    entityLabels: ILuisEntityLabel[];\n}\nexport interface ILuisDataset {\n    data: ILuisExample[];\n}\n\nexport interface ILuisTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any, importer?: gen.IFileImporter, currentPath?: string) {\n    const training: ILuisDataset = { data: [] };\n    const testing: ILuisDataset = { data: [] };\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const example = utterance.reduce(\n            (acc, next) => {\n                if (next.type === 'Slot' && next.slot) {\n                    acc.entityLabels.push({\n                        endCharIndex: acc.text.length + next.value.length,\n                        entityName: next.slot,\n                        startCharIndex: acc.text.length\n                    });\n                }\n                acc.text += next.value;\n                return acc;\n            },\n            { text: '', intentName: intentKey, entityLabels: [] } as ILuisExample\n        );\n        if (isTrainingExample) {\n            training.data.push(example);\n        } else {\n            testing.data.push(example);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter, importer, currentPath);\n    return { training, testing };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface IRasaEntity {\n    start: number;\n    end: number;\n    value: string;\n    entity: string;\n}\nexport interface IRasaExample {\n    text: string;\n    intent: string;\n    entities: IRasaEntity[];\n}\nexport interface IRasaDataset {\n    rasa_nlu_data: {\n        regex_features: any[];\n        entity_synonyms: Array<{ value: string; synonyms: string[] }>;\n        common_examples: IRasaExample[];\n    };\n}\n\nexport interface IRasaTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any, importer?: gen.IFileImporter, currentPath?: string) {\n    const training: IRasaDataset = {\n        rasa_nlu_data: {\n            regex_features: [],\n            entity_synonyms: [],\n            common_examples: []\n        }\n    };\n    const testing = { rasa_nlu_data: { common_examples: [] as IRasaExample[] } };\n    const synonyms: { [key: string]: Set<string> } = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const example = utterance.reduce(\n            (acc, next) => {\n                if (next.type === 'Slot' && next.slot) {\n                    if (next.synonym) {\n                        if (!synonyms[next.synonym]) {\n                            synonyms[next.synonym] = new Set();\n                        }\n                        if (next.synonym !== next.value) {\n                            synonyms[next.synonym].add(next.value);\n                        }\n                    }\n                    acc.entities.push({\n                        end: acc.text.length + next.value.length,\n                        entity: next.slot,\n                        start: acc.text.length,\n                        value: next.synonym ? next.synonym : next.value\n                    });\n                }\n                acc.text += next.value;\n                return acc;\n            },\n            { text: '', intent: intentKey, entities: [] } as IRasaExample\n        );\n        if (isTrainingExample) {\n            training.rasa_nlu_data.common_examples.push(example);\n        } else {\n            testing.rasa_nlu_data.common_examples.push(example);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter, importer, currentPath);\n    Object.keys(synonyms).forEach(k => {\n        training.rasa_nlu_data.entity_synonyms.push({\n            synonyms: Array.from(synonyms[k]),\n            value: k\n        });\n    });\n    return { training, testing };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface ISnipsUtteranceData {\n    text: string;\n    entity?: string;\n    slot_name?: string;\n}\nexport interface ISnipsUtterance {\n    data: ISnipsUtteranceData[];\n}\nexport interface ISnipsIntent {\n    utterances: ISnipsUtterance[];\n}\nexport interface ISnipsDataset {\n    intents: { [intentKey: string]: ISnipsIntent };\n    entities: {\n        [entityKey: string]: {\n            data?: Array<{ value: string; synonyms: string[] }>;\n            use_synonyms?: boolean;\n            automatically_extensible?: boolean;\n        };\n    };\n    language: string;\n}\n\nexport interface ISnipsTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any, importer?: gen.IFileImporter, currentPath?: string) {\n    const training: ISnipsDataset = { language: 'en', entities: {}, intents: {} };\n    const testing: ISnipsTestingDataset = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const synonymsForSlots: {\n        [slot: string]: { [key: string]: Set<string> };\n    } = {};\n    // const slots: Set<string> = new Set();\n    const entities: Set<string> = new Set();\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        if (isTrainingExample) {\n            if (!training.intents[intentKey]) {\n                training.intents[intentKey] = { utterances: [] };\n            }\n            const data = utterance.map(u => {\n                const ret: ISnipsUtteranceData = { text: u.value };\n                if (u.type === 'Slot' && u.slot) {\n                    ret.slot_name = u.slot;\n                    if (u.args) {\n                        Object.keys(u.args).forEach(key => {\n                            if (u.args && key === 'entity') {\n                                entities.add(u.args[key]);\n                                ret.entity = u.args[key];\n                            }\n                        });\n                    }\n                    if (!ret.entity) {\n                        ret.entity = u.slot;\n                        entities.add(u.slot);\n                    }\n                    if (u.synonym && ret.entity) {\n                        if (!synonymsForSlots[ret.entity]) {\n                            synonymsForSlots[ret.entity] = {};\n                        }\n                        const synonyms = synonymsForSlots[ret.entity];\n                        if (!synonyms[u.synonym]) {\n                            synonyms[u.synonym] = new Set();\n                        }\n                        if (u.synonym !== u.value) {\n                            synonyms[u.synonym].add(u.value);\n                        }\n                    }\n                }\n                return ret;\n            });\n            training.intents[intentKey].utterances.push({ data });\n        } else {\n            if (!testing[intentKey]) {\n                testing[intentKey] = [];\n            }\n            testing[intentKey].push(utterance);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter, importer, currentPath);\n    entities.forEach(slotKey => {\n        if (!synonymsForSlots[slotKey]) {\n            if (!training.entities[slotKey]) {\n                training.entities[slotKey] = {};\n            }\n            return;\n        }\n        Object.keys(synonymsForSlots[slotKey]).forEach(synonymsValue => {\n            if (!training.entities[slotKey]) {\n                training.entities[slotKey] = {};\n            }\n            training.entities[slotKey].use_synonyms = true;\n            training.entities[slotKey].automatically_extensible = true;\n            if (!training.entities[slotKey].data) {\n                training.entities[slotKey].data = [];\n            }\n            (training.entities[slotKey].data as any[]).push({\n                synonyms: [...synonymsForSlots[slotKey][synonymsValue]],\n                value: synonymsValue\n            });\n        });\n    });\n    return { training, testing };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface IDefaultDataset {\n    [intent: string]: ISentenceTokens[][];\n}\nexport async function adapter(dsl: string, formatOptions?: any, importer?: gen.IFileImporter, currentPath?: string) {\n    const training: IDefaultDataset = {};\n    const testing: IDefaultDataset = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const dataset = isTrainingExample ? training : testing;\n        if (!dataset[intentKey]) {\n            dataset[intentKey] = [];\n        }\n        dataset[intentKey].push(utterance);\n    };\n    await gen.datasetFromString(dsl, utteranceWriter, importer, currentPath);\n    return { training, testing };\n}\n","import * as rasaAdapter from '../../src/adapters/rasa';\nimport * as snipsAdapter from '../../src/adapters/snips';\nimport * as webAdapter from '../../src/adapters/web';\n\nconst findRestaurantsByCity = `import ./common.chatito\n\n# Ways to request a restaurant within a location (using probability operator)\n# NOTE: 60% of the examples should come from the first sentence, and 40 from the second\n\n%[findRestaurantsByCity]('training': '100', 'testing': '100')\n    *[60] ~[hi?] ~[please?] ~[find?] ~[restaurants] ~[located at] @[city] ~[city?] ~[thanks?]\n    *[40] ~[restaurants] ~[located at] @[city]\n\n@[city]\n    ~[new york]\n    ~[san francisco]\n    ~[atlanta]\n\n~[find]\n    find\n    i'm looking for\n    help me find\n\n~[located at]\n    located at\n    in the area of\n    near\n\n~[restaurants]\n    restaurants\n    places to eat\n    where to eat\n`;\n\nconst affirmative = `// Ways to say yes\n\nimport ./common.chatito\n\n%[affirmative]('training': '50', 'testing': '50')\n    *[20] ~[yes]\n    ~[yes] ~[please?]\n    ~[yes] ~[yes?] ~[thanks?]\n    ~[yes?] ~[that is good] ~[yes?]\n\n~[yes]\n    yes\n    right\n    affirmative\n    agreed\n    correct\n    yep\n    yes sir\n    sounds good\n    im ok with that\n\n~[that is good]\n    that is good\n    i want that\n    that is fine\n    that is correct\n    that is what i want\n    you understood me\n    that is right\n    its fine\n    good\n`;\n\nconst bye = `// Ways to say goodbye\n\nimport ./common.chatito\n\n%[bye]('training': '50', 'testing': '50')\n    *[10] ~[bye]\n    ~[thanks?] ~[bye]\n    ~[bye] ~[thanks?]\n    ~[leaving]\n    ~[leaving] ~[bye]\n\n~[bye]\n    bye\n    goodbye\n    ttyl\n    gtg\n    adios\n    farewell\n    adieu\n    chao\n    chau\n\n~[leaving]\n    leaving\n    talk to you soon\n    have to go\n    got to go\n    talk to you later\n    heading out\n    im leaving now\n    going out\n`;\n\nconst greet = `// Ways to say hello\n\nimport ./common.chatito\n\n%[greet]('training': '50', 'testing': '50')\n    *[10] ~[hi]\n    ~[greetings]\n    ~[hi] ~[greetings?]\n    ~[hi] ~[whats up]\n    ~[greetings] ~[whats up]\n    ~[hi] ~[greetings] ~[whats up]\n\n~[greetings]\n    greetings\n    good morning\n    good afternoon\n    good day\n    good night\n    morning\n\n~[whats up]\n    how are you\n    whats up\n    how are you doing\n    how is it going\n    are you there\n    how are things going\n    are you around\n    whatsup\n    sup\n    are you around?\n`;\n\nconst negative = `/// Ways to say no\n\nimport ./common.chatito\n\n%[negative]('training': '50', 'testing': '50')\n    *[20] ~[no]\n    ~[no] ~[please?] ~[its not ok?]\n    ~[please?] ~[no] ~[its not ok?]\n    *[20] ~[its not ok]\n\n~[no]\n    no\n    nope\n    not really\n    that's not right\n    incorrect\n    don't do that\n\n~[its not ok]\n    i don't want that\n    didnt meant that\n    dont mean that\n    that's not what i want\n    that's not correct\n    that's wrong\n    it's not good\n    that is wrong\n    its not ok\n    its not correct\n`;\n\nconst common = `// Common entities to be imported and reused\n~[hi]\n    hi\n    hello\n    hey\n\n~[please]\n    please\n    plz\n    pls\n\n~[thanks]\n    thanks\n    thank you\n\n`;\n\nexport const tabs = [\n    { title: 'findRestaurantsByCity.chatito', value: findRestaurantsByCity },\n    { title: 'greet.chatito', value: greet },\n    { title: 'bye.chatito', value: bye },\n    { title: 'affirmative.chatito', value: affirmative },\n    { title: 'negative.chatito', value: negative },\n    { title: 'common.chatito', value: common }\n];\n\nexport const chatitoPrism = {\n    comments: [{ pattern: /^(\\/\\/|\\#).*/, greedy: true }, { pattern: /((\\n|\\r\\n)+)(\\/\\/|\\#).*/, greedy: true }],\n    imports: [{ pattern: /(\\n|\\r\\n)import\\s/, greedy: true }, { pattern: /^import\\s/, greedy: true }],\n    intentDefinition: [\n        {\n            pattern: /^%\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { intentArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)%\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { intentArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    slotDefinition: [\n        {\n            pattern: /^\\@\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { slotArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)\\@\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { slotArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    probability: { pattern: /(\\n|\\r\\n)\\s\\s\\s\\s\\*\\[[^\\]]+\\]/, greedy: true },\n    slot: { pattern: /\\@\\[[^\\]]+(\\?)?\\]/, greedy: true },\n    alias: { pattern: /~\\[[^\\]]+(\\?)?\\]/, greedy: true },\n    default: { pattern: /[^\\r\\n]/i, greedy: true }\n};\n\nexport const webDefaultOptions: webAdapter.IDefaultDataset = {};\nexport const rasaDefaultOptions: rasaAdapter.IRasaDataset = {\n    rasa_nlu_data: {\n        regex_features: [],\n        entity_synonyms: [],\n        common_examples: []\n    }\n};\nexport const snipsDefaultOptions: snipsAdapter.ISnipsDataset = { language: 'en', entities: {}, intents: {} };\n","import styled from 'styled-components';\n\nexport const AlertNotification = styled('div')`\n    width: 100%;\n    background-color: ${({ state }: { state: 'error' | 'warning' | 'success' }) =>\n        state === 'error' ? '#c80000' : state === 'warning' ? '#7f8000' : '#008800'};\n    bottom: 0;\n    margin: auto;\n    right: 0;\n    text-align: center;\n    padding: 12px;\n    color: white;\n    z-index: 99;\n    font-size: 14px;\n`;\n\nexport const CodeStyles = styled('div')`\n    white-space: pre-wrap;\n    position: relative;\n    margin: auto;\n    width: inherit;\n    height: calc(100vh - 210px) !important;\n    min-height: 400px;\n    background-color: #282a35;\n    > .codeflask {\n        background-color: #282a35;\n        > textarea.codeflask__textarea {\n            color: #282a35;\n            caret-color: #fff;\n        }\n        &.codeflask--has-line-numbers {\n            :before {\n                background-color: #3c3c4c;\n            }\n            > pre {\n                width: auto !important;\n            }\n            div.codeflask__lines {\n                z-index: 3;\n                height: auto !important;\n                padding: 10px 4px 0 0;\n                > .codeflask__lines__line {\n                    color: #6473a0;\n                    background-color: #3c3c4c;\n                }\n            }\n        }\n        *::-webkit-scrollbar {\n            width: 10px;\n            height: 10px;\n        }\n        *::-webkit-scrollbar-thumb {\n            background-color: #7c7c9c;\n            box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n        }\n        *::-webkit-scrollbar-track {\n            box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n        }\n        *::-webkit-scrollbar-corner {\n            background-color: transparent;\n        }\n    }\n    .token.imports {\n        color: #F7717D;\n    }\n    .token.comments {\n        color: #999;\n    }\n    .token.intentDefinition {\n        color: #ef82c3;\n    }\n    .token.slotDefinition {\n        color: #ffaf56;\n    }\n    .token.probability {\n        color: #00F0B5;\n    }\n    .token.slot {\n        color: #ffaf56;\n    }\n    .token.alias {\n        color: #a0e7fb;\n    }\n    .token.default {\n        color: #e2e2dd;\n    }\n    .token.intentArguments {\n        color: #b5669e;\n    }\n    .token.slotArguments {\n        color: #7a9d98;\n    }\n`;\n\nexport const TabButton = styled('div')`\n    cursor: pointer;\n    display: inline-block;\n    background-color: ${({ active }: { active: boolean }) => (active ? '#282A35' : '#3c3c4c')};\n    font-size: 12px;\n    color: #ededed;\n    padding: 13px 3px 13px 13px;\n    border-right: 1px solid #2c2c3c;\n    zoom: 1;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n`;\n\nexport const CloseTab = styled('div')`\n    :after {\n        content: 'x';\n    }\n    padding: 8px;\n    margin-left: 8px;\n    display: inline-block;\n    color: #ccf;\n    line-height: 10px;\n    font-size: 14px;\n    cursor: pointer;\n    font-weight: bold;\n`;\n\nexport const EditorHeader = styled('div')`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    max-width: 100%;\n    background-color: #3c3c4c;\n    padding-left: 40px;\n    padding-top: 10px;\n`;\n\nexport const TabsAreaButton = styled('button')`\n    cursor: pointer;\n    background-color: #6c1de2;\n    font-size: 12px;\n    color: #efefef;\n    line-height: 14px;\n    padding: 8px 24px;\n    white-space: nowrap;\n    margin: auto 10px;\n    border-radius: 4px;\n    border-color: #333;\n    -webkit-transition: 0.25s ease;\n    -moz-transition: 0.25s ease;\n    -o-transition: 0.25s ease;\n    transition: 0.25s ease;\n    &:first-of-type {\n        margin-left: 20px;\n    }\n    :disabled {\n        border: 1px solid #999999;\n        background-color: #cccccc;\n        color: #666666;\n    }\n`;\n\nexport const TabsArea = styled('div')`\n    width: auto;\n    max-width: 100%;\n    white-space: nowrap;\n    position: relative;\n    overflow-x: auto;\n    overflow-y: hidden;\n    -webkit-overflow-scrolling: touch;\n    &::-webkit-scrollbar {\n        height: 6px;\n    }\n    &::-webkit-scrollbar-thumb {\n        background-color: #7c7c9c;\n        -webkit-box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n    }\n    &::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n    }\n    *::-webkit-scrollbar-corner {\n        background-color: transparent;\n    }\n`;\n\nexport const EditorWrapper = styled('div')`\n    width: 90vw;\n    overflow: auto;\n    margin: auto;\n    position: relative;\n    -webkit-box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n    -moz-box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n    box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n`;\n\nexport const Drawer = styled('div')`\n    z-index: 99;\n    position: absolute;\n    background-color: #352252;\n    -webkit-box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    -moz-box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    top: 0;\n    right: 0;\n    max-width: 700px;\n    height: 100%;\n    width: ${({ showDrawer }: { showDrawer: boolean }) => (showDrawer ? `100%` : `0px`)};\n    -webkit-transition: 0.65s ease;\n    -moz-transition: 0.65s ease;\n    -o-transition: 0.65s ease;\n    transition: 0.65s ease;\n    overflow: auto;\n`;\n\nexport const EditorOverlay = styled('div')`\n    z-index: 999;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    visibility: ${({ showDrawer }: { showDrawer: boolean }) => (showDrawer ? 'visible' : 'hidden')};\n    -webkit-transition: 0.25s ease;\n    -moz-transition: 0.25s ease;\n    -o-transition: 0.25s ease;\n    transition: 0.25s ease;\n`;\n\nexport const BlockWrapper = styled('div')`\n    background-color: #e4e4e4;\n    margin: 20px;\n    overflow: auto;\n    border-radius: 8px;\n    -webkit-box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    -moz-box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    clear: both;\n`;\n\nexport const BlockWrapperTitle = styled('div')`\n    background-color: #6b5a86;\n    color: #efefef;\n    font-size: 13px;\n    padding: 8px 10px;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n`;\n\nexport const CloseDrawerButton = styled('div')`\n    cursor: pointer;\n    color: white;\n    font-size: 16px;\n    padding: 8px;\n    font-weight: bold;\n    margin: 8px 20px 8px 20px;\n    float: right;\n`;\n\nexport const DrawerFormField = styled('div')`\n    padding: 10px 20px;\n    display: flex;\n    align-items: center;\n    flex: 1;\n    > label {\n        font-size: 12px;\n        padding-right: 10px;\n    }\n`;\n\nexport const SelectWrapper = styled('div')`\n    position: relative;\n    z-index: 0;\n    display: inline-block;\n    overflow: hidden;\n    height: auto;\n    padding: 0 5px 0 0;\n    margin: 0 5px 0 0;\n    border-radius: 5px;\n    border: solid 1px #ccc;\n    background-color: #fff;\n    :before {\n        position: absolute;\n        z-index: 1;\n        content: '\\\\25BE';\n        top: 50%;\n        right: 10px;\n        margin-top: -9px;\n    }\n    select {\n        position: relative;\n        z-index: 2;\n        outline: none;\n        width: 120%;\n        padding: 5px 20px 5px 10px;\n        background-color: transparent;\n        background-image: none;\n        -webkit-appearance: none;\n        border: none;\n        box-shadow: none;\n    }\n`;\n\nexport const CheckboxWrapper = styled('div')`\n    font-size: 12px;\n    text-decoration: underline;\n    cursor: pointer;\n    input {\n        margin-right: 10px;\n        cursor: pointer;\n    }\n`;\n","import { saveAs } from 'file-saver';\nimport * as React from 'react';\nimport * as luisAdapter from '../../../src/adapters/luis';\nimport * as rasaAdapter from '../../../src/adapters/rasa';\nimport * as snipsAdapter from '../../../src/adapters/snips';\nimport * as webAdapter from '../../../src/adapters/web';\nimport * as chatito from '../../../src/main';\nimport * as utils from '../../../src/utils';\nimport { chatitoPrism, rasaDefaultOptions, snipsDefaultOptions, tabs } from '../../lib/editorConfig';\nimport { debounce } from '../../lib/utils';\nimport * as es from './editorStyles';\n\nconst adapters = {\n    default: webAdapter,\n    rasa: rasaAdapter,\n    snips: snipsAdapter,\n    luis: luisAdapter\n};\n\ninterface IEditorState {\n    error: null | string;\n    warning: null | string;\n    activeTabIndex: number;\n    showDrawer: boolean;\n    dataset: any;\n    adapterOptions: any;\n    currentAdapter: 'default' | 'rasa' | 'snips' | 'luis';\n    useCustomOptions: boolean;\n}\n\ntype IDataset = webAdapter.IDefaultDataset | snipsAdapter.ISnipsDataset | rasaAdapter.IRasaDataset | luisAdapter.ILuisDataset;\n\n// NOTE: for SSR, wrap the require in check for window\nlet CodeFlask = null;\nlet ReactJson = null;\nif (typeof window !== `undefined`) {\n    // tslint:disable-next-line:no-var-requires\n    CodeFlask = require('codeflask').default;\n    // tslint:disable-next-line:no-var-requires\n    ReactJson = require('react-json-view').default;\n}\n\nexport default class Editor extends React.Component<{}, IEditorState> {\n    public state: IEditorState = {\n        error: null,\n        warning: null,\n        activeTabIndex: 0,\n        showDrawer: false,\n        dataset: null,\n        adapterOptions: null,\n        currentAdapter: 'default',\n        useCustomOptions: false\n    };\n    private tabsContainer = React.createRef() as React.RefObject<HTMLDivElement>;\n    private codeflask = null;\n    private editorUpdatesSetupCount = 0;\n    private codeInputValue = '';\n    private tabs: Array<{ title: string; value: string }> = [];\n\n    private debouncedTabDSLValidation = debounce(() => {\n        if (!this.codeInputValue.length) {\n            if (this.state.error || this.state.warning) {\n                this.setState({ error: null, warning: null });\n            }\n            return;\n        }\n        const validation = this.getDSLValidation(this.codeInputValue);\n        let newState = {};\n        if (validation && validation.error) {\n            newState = { error: validation.error, warning: null };\n        } else if (validation && validation.warning) {\n            newState = { error: null, warning: validation.warning };\n        } else {\n            newState = { error: null, warning: null };\n        }\n        this.setState(newState, () => {\n            this.saveToLocalStorage(true, false, false);\n        });\n    }, 300);\n\n    public componentDidMount() {\n        if (!CodeFlask) {\n            return;\n        }\n        this.loadFromLocalStorage(() => {\n            const flask = new CodeFlask('#my-code-editor', {\n                language: 'chatito',\n                lineNumbers: true\n            });\n            flask.addLanguage('chatito', chatitoPrism);\n            flask.onUpdate(code => {\n                if (!this.tabs || !this.tabs[this.state.activeTabIndex]) {\n                    return;\n                }\n                this.codeInputValue = code;\n                this.tabs[this.state.activeTabIndex].value = code;\n                // NOTE: ugly hack to know when codeflask is mounted (it makes 2 calls to update on mount)\n                if (this.editorUpdatesSetupCount < 2) {\n                    this.editorUpdatesSetupCount++;\n                } else {\n                    this.setState({ dataset: null });\n                    this.debouncedTabDSLValidation();\n                }\n            });\n            if (this.tabs && this.tabs[this.state.activeTabIndex]) {\n                flask.updateCode(this.tabs[this.state.activeTabIndex].value);\n            }\n            flask.setLineNumber();\n            this.codeflask = flask;\n        });\n    }\n\n    public render() {\n        const alertState = !!this.state.error ? 'error' : !!this.state.warning ? 'warning' : 'success';\n        return (\n            <es.EditorWrapper>\n                <es.EditorHeader>\n                    <es.TabsArea innerRef={this.tabsContainer}>{this.tabs.map(this.renderTabButton)}</es.TabsArea>\n                    <es.TabsAreaButton onClick={this.onAddFile} style={{ backgroundColor: '#1a6849' }}>\n                        New file\n                    </es.TabsAreaButton>\n                    <es.TabsAreaButton onClick={this.onToggleDrawer} disabled={!!this.state.error}>\n                        Generate Dataset\n                    </es.TabsAreaButton>\n                </es.EditorHeader>\n                <es.CodeStyles id=\"my-code-editor\" />\n                <es.AlertNotification state={alertState}>\n                    {' '}\n                    {this.state.error || this.state.warning || `Correct syntax!`}\n                </es.AlertNotification>\n                <es.EditorOverlay onClick={this.onCloseDrawer} showDrawer={this.state.showDrawer}>\n                    <es.Drawer onClick={e => e.stopPropagation()} showDrawer={this.state.showDrawer}>\n                        <es.CloseDrawerButton onClick={this.onCloseDrawer}>x</es.CloseDrawerButton>\n                        {this.renderDatasetGeneratorSettings()}\n                        {this.renderDatasetPreviewer()}\n                    </es.Drawer>\n                </es.EditorOverlay>\n            </es.EditorWrapper>\n        );\n    }\n\n    /* ================== Renderers ================== */\n    private renderDatasetGeneratorSettings = () => {\n        return (\n            <es.BlockWrapper>\n                <es.BlockWrapperTitle>Dataset generation settings</es.BlockWrapperTitle>\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <es.DrawerFormField style={{ borderRight: '1px solid #ccc' }}>\n                        <label htmlFor=\"adapterSelect\">Dataset format: </label>\n                        <es.SelectWrapper>\n                            <select\n                                id=\"adapterSelect\"\n                                name=\"adapterSelect\"\n                                onChange={this.onAdapterChange}\n                                value={this.state.currentAdapter}\n                            >\n                                <option value=\"default\">Default</option>\n                                <option value=\"rasa\">Rasa NLU</option>\n                                <option value=\"luis\">LUIS</option>\n                                <option value=\"snips\">Snips NLU</option>\n                            </select>\n                        </es.SelectWrapper>\n                    </es.DrawerFormField>\n                    <es.DrawerFormField>\n                        <es.CheckboxWrapper>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={this.state.useCustomOptions}\n                                    onChange={this.onCustomOptionsCheckboxChange}\n                                />\n                                Use custom options\n                            </label>\n                        </es.CheckboxWrapper>\n                    </es.DrawerFormField>\n                </div>\n                {this.renderEditAdapterOptions()}\n                <div style={{ padding: 20, textAlign: 'center' }}>\n                    <es.TabsAreaButton onClick={this.generateDataset}>Generate and download dataset!</es.TabsAreaButton>\n                </div>\n            </es.BlockWrapper>\n        );\n    };\n\n    private renderEditAdapterOptions = () => {\n        if (!this.state.useCustomOptions || !ReactJson) {\n            return null;\n        }\n        return (\n            <div>\n                <div style={{ padding: '10px 20px 0 20px', fontSize: 12, borderTop: '1px solid #ccc' }}>\n                    Edit the adapter custom initial options:\n                </div>\n                <div style={{ flex: '1', margin: '10px 20px' }}>\n                    <ReactJson\n                        style={{ padding: '10px' }}\n                        src={this.state.adapterOptions || {}}\n                        theme=\"summerfruit:inverted\"\n                        iconStyle=\"square\"\n                        enableClipboard={false}\n                        displayDataTypes={false}\n                        name={false}\n                        collapsed={false}\n                        onEdit={this.onEditAdapterOptions}\n                        onAdd={this.onEditAdapterOptions}\n                        onDelete={this.onEditAdapterOptions}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private renderDatasetPreviewer = () => {\n        if (!this.state.dataset || !ReactJson) {\n            return null;\n        }\n        return (\n            <es.BlockWrapper>\n                <es.BlockWrapperTitle>Review the generated training dataset</es.BlockWrapperTitle>\n                <ReactJson\n                    style={{ padding: 20 }}\n                    src={this.state.dataset}\n                    theme=\"chalk\"\n                    iconStyle=\"square\"\n                    enableClipboard={false}\n                    displayDataTypes={false}\n                    name={false}\n                    collapsed={2}\n                />\n            </es.BlockWrapper>\n        );\n    };\n\n    private renderTabButton = (t, i) => {\n        const changeTab = () => this.changeTab(i);\n        const onCloseTab = this.closerTab(i);\n        return (\n            <es.TabButton active={this.state.activeTabIndex === i} key={`tab-${i}`} onClick={changeTab}>\n                {t.title}\n                <es.CloseTab onClick={onCloseTab} />\n            </es.TabButton>\n        );\n    };\n\n    /* ================== Event Handlers ================== */\n    private onCloseDrawer = () => this.setState({ showDrawer: false, dataset: null });\n\n    private onCustomOptionsCheckboxChange = e => {\n        let adapterOptions = {};\n        if (this.state.currentAdapter === 'rasa') {\n            adapterOptions = Object.assign({}, rasaDefaultOptions);\n        } else if (this.state.currentAdapter === 'snips') {\n            adapterOptions = Object.assign({}, snipsDefaultOptions);\n        }\n        this.setState({ useCustomOptions: e.target.checked, adapterOptions, dataset: null }, () => {\n            this.saveToLocalStorage(false, true, true);\n        });\n    };\n\n    private onAdapterChange = e => {\n        let adapterOptions = {};\n        if (e.target.value === 'rasa') {\n            adapterOptions = Object.assign({}, rasaDefaultOptions);\n        } else if (e.target.value === 'snips') {\n            adapterOptions = Object.assign({}, snipsDefaultOptions);\n        }\n        this.setState({ currentAdapter: e.target.value, adapterOptions, dataset: null }, () => {\n            this.saveToLocalStorage(false, true, true);\n        });\n    };\n\n    private onEditAdapterOptions = changes => {\n        if (changes && changes.updated_src) {\n            this.setState({ adapterOptions: changes.updated_src }, () => {\n                this.saveToLocalStorage(false, true, false);\n            });\n            return null;\n        }\n        return false;\n    };\n\n    private onAddFile = () => {\n        let filename = 'newFile';\n        if (window && window.prompt) {\n            filename = prompt('Please enter the new .chatito file name:', filename);\n        }\n        if (filename) {\n            this.tabs.push({ title: `${filename}.chatito`, value: '' });\n            this.changeTab(this.tabs.length - 1, () => {\n                this.tabsContainer.current.scrollTo({\n                    left: this.tabsContainer.current.scrollWidth,\n                    behavior: 'smooth'\n                });\n            });\n        }\n    };\n\n    private onToggleDrawer = async () => {\n        if (!this.state.showDrawer) {\n            if (this.validateChatitoFiles()) {\n                try {\n                    this.setState({ showDrawer: !this.state.showDrawer });\n                } catch (e) {\n                    return;\n                }\n            } else {\n                if (window && window.alert) {\n                    window.alert('Please fix the errors or warnings found in the code.');\n                }\n            }\n        }\n    };\n\n    /* ================== Utils ================== */\n\n    private saveToLocalStorage = (saveTabs, saveAdapterOptions, saveCurrentAdapter) => {\n        if (window && localStorage) {\n            if (saveTabs) {\n                localStorage.setItem('__tabs', JSON.stringify(this.tabs));\n            }\n            if (saveAdapterOptions) {\n                localStorage.setItem('__adapterOptions', this.state.useCustomOptions ? JSON.stringify(this.state.adapterOptions) : '');\n            }\n            if (saveCurrentAdapter) {\n                localStorage.setItem('__currentAdapter', this.state.currentAdapter);\n            }\n        }\n    };\n\n    private loadFromLocalIfPresent = (key: string, parseAsJSON: boolean) => {\n        if (window && localStorage) {\n            try {\n                const item = localStorage.getItem(key);\n                if (!parseAsJSON) {\n                    return item;\n                }\n                if (item) {\n                    try {\n                        return JSON.parse(item);\n                    } catch (e) {\n                        // just catch the error\n                    }\n                }\n            } catch (e) {\n                // tslint:disable-next-line:no-console\n                console.error(e);\n            }\n        }\n    };\n\n    private loadFromLocalStorage = (cb: () => void) => {\n        if (window && localStorage) {\n            const newState: any = {};\n            const localTabs = this.loadFromLocalIfPresent('__tabs', true);\n            const localAdapterOptions = this.loadFromLocalIfPresent('__adapterOptions', true);\n            const localCurrentAdapter = this.loadFromLocalIfPresent('__currentAdapter', false);\n            this.tabs = localTabs ? localTabs : tabs;\n            if (localAdapterOptions) {\n                newState.adapterOptions = localAdapterOptions;\n                newState.useCustomOptions = true;\n            }\n            if (localCurrentAdapter) {\n                newState.currentAdapter = localCurrentAdapter;\n            }\n            this.setState(newState, cb);\n        } else {\n            this.tabs = tabs;\n        }\n        cb();\n    };\n\n    private changeTab = (i: number, cb?: () => void) => {\n        this.setState({ activeTabIndex: i }, () => {\n            this.codeflask.updateCode(this.tabs[this.state.activeTabIndex].value);\n            this.codeflask.setLineNumber();\n            if (cb) {\n                setTimeout(cb, 600); // note; hack using setTimeout because codeflask uses a timeout on update code\n            }\n        });\n    };\n\n    private closerTab = (i: number) => {\n        return (e: React.SyntheticEvent) => {\n            if (e) {\n                e.stopPropagation();\n            }\n            if (this.tabs[i].value) {\n                if (!window.confirm(`Do you really want to remove '${this.tabs[i].title}'?`)) {\n                    return;\n                }\n            }\n            const ati = this.state.activeTabIndex;\n            let newActiveTabIndex = this.state.activeTabIndex;\n            if (ati === i && ati > 0) {\n                newActiveTabIndex = ati - 1;\n            }\n            this.tabs = [...this.tabs.slice(0, i), ...this.tabs.slice(i + 1)];\n            if (!this.tabs.length) {\n                this.tabs.push({ title: 'newFile.chatito', value: '' });\n                newActiveTabIndex = 0;\n            }\n            this.saveToLocalStorage(true, false, false);\n            this.changeTab(newActiveTabIndex);\n        };\n    };\n\n    private getDSLValidation = (dsl: string): null | { error?: string; warning?: string } => {\n        try {\n            const ast = chatito.astFromString(dsl);\n            const intentsWithoutLimit = ast.filter(entity => entity.type === 'IntentDefinition' && entity.args === null);\n            if (intentsWithoutLimit.length) {\n                return {\n                    warning: `Warning: Limit the number of generated examples for intents. E.g.: %[${\n                        intentsWithoutLimit[0].key\n                    }]('training': '100')`\n                };\n            }\n            return null;\n        } catch (e) {\n            const error =\n                e.constructor === Error\n                    ? e.toString()\n                    : `${e.name}: ${e.message} Line: ${e.location.start.line}, Column: ${e.location.start.column}`;\n            return { error };\n        }\n    };\n\n    private validateChatitoFiles = () => {\n        return !this.tabs.some((tab, i) => {\n            if (tab.value) {\n                const validation = this.getDSLValidation(tab.value);\n                if (validation !== null) {\n                    this.changeTab(i);\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n\n    private importFile = (startPath: string, endPath: string) => {\n        const filename = endPath.replace(/^\\.\\//, '');\n        const tabFound = this.tabs.find(t => t.title.trim() === filename);\n        if (!tabFound) {\n            throw new Error(`Can't import ${endPath}. Not found.`);\n        }\n        // note: returning empty path since there is no actual filesystem\n        return { filePath: '', dsl: tabFound.value };\n    };\n\n    private generateDataset = async () => {\n        let dataset: IDataset | null = null;\n        const testingDataset = {};\n        const adapter = adapters[this.state.currentAdapter];\n        if (!adapter) {\n            return;\n        }\n        for (const [i, tab] of this.tabs.entries()) {\n            try {\n                if (dataset === null && this.state.useCustomOptions && this.state.adapterOptions) {\n                    dataset = JSON.parse(JSON.stringify(this.state.adapterOptions));\n                }\n                const { training, testing } = await adapter.adapter(tab.value, dataset, this.importFile, '');\n                dataset = training;\n                utils.mergeDeep(testingDataset, testing);\n            } catch (e) {\n                this.setState({ dataset: null, showDrawer: false }, () => {\n                    this.changeTab(i, () =>\n                        this.setState({ error: e.message }, () => {\n                            if (window && window.alert) {\n                                console.log(e);\n                                window.alert(`Please fix error: ${e.message}`);\n                            }\n                        })\n                    );\n                });\n                return;\n            }\n        }\n        const datasetBlob = new Blob([JSON.stringify(dataset)], { type: 'text/json;charset=utf-8' });\n        const testingBlob = new Blob([JSON.stringify(testingDataset)], { type: 'text/json;charset=utf-8' });\n        saveAs(datasetBlob, `training_dataset_${Math.round(new Date().getTime() / 1000)}.json`);\n        setTimeout(() => {\n            saveAs(testingBlob, `testing_dataset_${Math.round(new Date().getTime() / 1000)}.json`);\n        }, 100); // note: timeout to allow multiple downloads at once\n        this.setState({ dataset });\n    };\n}\n","export function debounce(func, wait) {\n    let timeout;\n    return function(...args) {\n        const context = this;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => func.apply(context, args), wait);\n    };\n}\n","import styled, { createGlobalStyle } from 'styled-components';\n\n// tslint:disable-next-line:no-unused-expression\nexport const Global: any = createGlobalStyle`\n  *, *::after, *::before {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  :focus { outline: none; }\n  h1, h2 { display: inline; font-size: 20px; }\n  ::-moz-focus-inner { border: 0; }\n  html, body, #app {\n      padding: 0;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n      height: auto !important;\n      font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif;\n      background-color: #ccc;\n  }\n  a { text-decoration: none; }\n  body {\n      box-sizing: border-box;\n      min-height: 100vh;\n      background: #ececec;\n      padding: 0;\n  }\n  a:focus, a:active, a:any-link { text-decoration: none; }\n`;\n\nexport const Header = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    h1,\n    h2 {\n        display: inline;\n    }\n    a {\n        text-decoration: none;\n        color: #990adb;\n    }\n    a:hover {\n        color: #b92afb;\n    }\n    color: '#444';\n    margin: 20px;\n`;\n","import * as React from 'react';\n\nexport default function Logo() {\n    return (\n        <svg fill=\"#990ADB\" viewBox=\"0 0 14 12\" version=\"1.1\" x=\"0px\" y=\"0px\">\n            <g stroke=\"none\" fill=\"none\">\n                <g fill=\"#990ADB\">\n                    <path d=\"M7.032,5.504 C6.672,5.504 6.384,5.792 6.384,6.152 C6.384,6.512 6.672,6.8 7.032,6.8 C7.392,6.8 7.68,6.512 7.68,6.152 C7.688,5.792 7.392,5.504 7.032,5.504 Z M3.88,5.504 C3.52,5.504 3.232,5.792 3.232,6.152 C3.232,6.512 3.52,6.8 3.88,6.8 C4.24,6.8 4.528,6.512 4.528,6.152 C4.528,5.792 4.24,5.504 3.88,5.504 Z M9.544,6.152 C9.544,6.512 9.832,6.8 10.192,6.8 C10.552,6.8 10.84,6.512 10.84,6.152 C10.84,5.792 10.552,5.504 10.192,5.504 C9.832,5.504 9.544,5.792 9.544,6.152 Z\" />\n                    <path d=\"M13.024,3.096 L13.024,3.08 C13.024,2.744 12.856,1.272 12.368,0.816 C12.208,0.664 12.048,0.64 11.944,0.648 C11.544,0.664 10.976,1.088 10.336,1.6 C10.264,1.656 10.184,1.72 10.12,1.768 L4.328,1.768 C4.184,1.768 4.032,1.76 3.888,1.768 C3.856,1.744 3.832,1.736 3.8,1.704 C3.232,1.16 2.68,0.664 2.24,0.648 C2.136,0.64 1.976,0.672 1.816,0.816 C1.376,1.232 1.192,2.48 1.16,2.952 C1.136,2.968 1.12,2.984 1.104,3.008 C0.624,3.624 0.312,4.584 0.312,5.456 L0.312,6.8 C0.312,8.064 1.024,9.184 2.104,9.848 L2.104,11.392 C2.104,11.456 2.152,11.504 2.216,11.504 C2.248,11.504 2.272,11.496 2.296,11.472 L3.392,10.376 C3.728,10.456 4.08,10.496 4.424,10.496 L9.752,10.496 C11.992,10.496 13.752,8.872 13.752,6.8 L13.752,5.456 C13.752,4.624 13.472,3.704 13.024,3.096 Z M13.08,6.8 C13.08,8.496 11.616,9.824 9.752,9.824 L4.424,9.824 C2.528,9.824 0.984,8.464 0.984,6.8 L0.984,5.456 C0.984,4.736 1.248,3.92 1.632,3.424 C1.648,3.4 1.672,3.368 1.688,3.344 C1.824,3.192 1.816,3.064 1.832,2.888 C1.848,2.68 1.88,2.472 1.928,2.264 C1.984,1.968 2.048,1.552 2.248,1.32 C2.424,1.376 2.784,1.664 3.328,2.184 C3.584,2.424 3.744,2.44 4,2.44 L10.024,2.44 C10.248,2.44 10.392,2.416 10.76,2.128 C10.992,1.944 11.672,1.408 11.936,1.336 C12.128,1.552 12.36,2.536 12.36,3.048 C12.352,3.184 12.384,3.312 12.464,3.424 C12.84,3.92 13.088,4.776 13.088,5.472 L13.08,6.8 Z\" />\n                </g>\n            </g>\n        </svg>\n    );\n}\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Editor from '../components/Editor/Editor';\nimport { Global, Header } from '../components/globalStyles';\nimport Logo from '../components/Logo';\n\n// NOTE: gatsby global for prefix\ndeclare var __PATH_PREFIX__;\n\nexport default class Index extends React.Component<{}, {}> {\n    public render() {\n        return (\n            <div>\n                <Helmet>\n                    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`${__PATH_PREFIX__}/apple-touch-icon.png`} />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`${__PATH_PREFIX__}/favicon-32x32.png`} />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`${__PATH_PREFIX__}/favicon-16x16.png`} />\n                    <link rel=\"manifest\" href={`${__PATH_PREFIX__}/site.webmanifest`} />\n                    <link rel=\"mask-icon\" href={`${__PATH_PREFIX__}/safari-pinned-tab.svg`} color=\"#5bbad5\" />\n                    <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n                    <meta name=\"theme-color\" content=\"#ffffff\" />\n                    <title>Chatito DSL - Generate dataset for chatbots</title>\n                    <meta\n                        name=\"keywords\"\n                        content=\"chatbot, dataset generation, dataset generator, generate datasets, rasa nlu, snips nlu, chatbot dataset, datasets for chatbots\"\n                    />\n                    <meta\n                        name=\"description\"\n                        content=\"Chatito helps you helps you generate datasets for natural language understanding models using a simple DSL\"\n                    />\n                </Helmet>\n                <Global />\n                <Header>\n                    <div style={{ display: 'inline-block', width: 50, minWidth: 50, height: 43 }}>\n                        <Logo />\n                    </div>\n                    <div style={{ paddingLeft: 24 }}>\n                        <h1>\n                            <a href=\"https://github.com/rodrigopivi/Chatito\">Chatito</a>\n                        </h1>\n                        <h2>\n                            &nbsp;helps you generate datasets for natural language understanding models using a simple DSL&nbsp;\n                            <a href=\"https://github.com/rodrigopivi/Chatito\">Read the docs</a>\n                        </h2>\n                    </div>\n                </Header>\n                <Editor />\n            </div>\n        );\n    }\n}\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Start: peg$parseStart },\n      peg$startRuleFunction  = peg$parseStart,\n\n      peg$c0 = function(od) { return od; },\n      peg$c1 = \"*[\",\n      peg$c2 = peg$literalExpectation(\"*[\", false),\n      peg$c3 = \"]\",\n      peg$c4 = peg$literalExpectation(\"]\", false),\n      peg$c5 = function(probability) { return probability; },\n      peg$c6 = \"?\",\n      peg$c7 = peg$literalExpectation(\"?\", false),\n      peg$c8 = \"[\",\n      peg$c9 = peg$literalExpectation(\"[\", false),\n      peg$c10 = function(value) { return value },\n      peg$c11 = function(value, opt) { return { value: value, opt: !!opt  }; },\n      peg$c12 = \"%\",\n      peg$c13 = peg$literalExpectation(\"%\", false),\n      peg$c14 = function(value, args) { return { value: value, type: \"IntentDefinition\", args: args, location: location() } },\n      peg$c15 = \"\\r\\n\",\n      peg$c16 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c17 = \"\\n\",\n      peg$c18 = peg$literalExpectation(\"\\n\", false),\n      peg$c19 = \"~[\",\n      peg$c20 = peg$literalExpectation(\"~[\", false),\n      peg$c21 = \"@[\",\n      peg$c22 = peg$literalExpectation(\"@[\", false),\n      peg$c23 = peg$anyExpectation(),\n      peg$c24 = function(t) { return t.join(\"\"); },\n      peg$c25 = function(v) { return v.join(\"\"); },\n      peg$c26 = function(value) { return { value: value, type: \"Text\" }},\n      peg$c27 = function(p, s) { return { sentence: s, probability: p }; },\n      peg$c28 = function(o, s) { return { type: o.type, key: o.value, args: o.args, location: o.location, inner: s } },\n      peg$c29 = \"#\",\n      peg$c30 = peg$literalExpectation(\"#\", false),\n      peg$c31 = function(id) { return id },\n      peg$c32 = function(value, variation, args) { return { value: value, type: \"SlotDefinition\", variation: variation, args: args, location: location() } },\n      peg$c33 = function(value, variation, opt) { return { value: value, opt: !!opt, variation: variation }; },\n      peg$c34 = \"@\",\n      peg$c35 = peg$literalExpectation(\"@\", false),\n      peg$c36 = function(op) { return { value: op.value, type: \"Slot\", opt: op.opt, location: location(), variation: op.variation } },\n      peg$c37 = function(o, s) { return { type: o.type, key: o.value, args: o.args, location: o.location, inner: s, variation: o.variation } },\n      peg$c38 = \"~\",\n      peg$c39 = peg$literalExpectation(\"~\", false),\n      peg$c40 = function(value) { return { value: value, type: \"AliasDefinition\", location: location() } },\n      peg$c41 = function(op) { return { value: op.value, type: \"Alias\", opt: op.opt } },\n      peg$c42 = function(o, s) { return { type: o.type, key: o.value, location: o.location, inner: s } },\n      peg$c43 = peg$otherExpectation(\"correct indentation\"),\n      peg$c44 = \" \",\n      peg$c45 = peg$literalExpectation(\" \", false),\n      peg$c46 = function(s) { return s.length === level * STEP; },\n      peg$c47 = function() { level++; return true; },\n      peg$c48 = function() { level--; return true; },\n      peg$c49 = \"//\",\n      peg$c50 = peg$literalExpectation(\"//\", false),\n      peg$c51 = function(c) { return { type: \"Comment\" , value: c.trim() }; },\n      peg$c52 = \"import \",\n      peg$c53 = peg$literalExpectation(\"import \", false),\n      peg$c54 = function(s) { return { type: \"ImportFile\", value: s.trim() }; },\n      peg$c55 = peg$otherExpectation(\"entity name\"),\n      peg$c56 = peg$otherExpectation(\"integer\"),\n      peg$c57 = /^[0-9]/,\n      peg$c58 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c59 = function() { return parseInt(text(), 10); },\n      peg$c60 = peg$otherExpectation(\"end of sentence\"),\n      peg$c61 = peg$otherExpectation(\"end of line \"),\n      peg$c62 = peg$otherExpectation(\"non windows end of line\"),\n      peg$c63 = peg$otherExpectation(\"windows end of line\"),\n      peg$c64 = \"(\",\n      peg$c65 = peg$literalExpectation(\"(\", false),\n      peg$c66 = \")\",\n      peg$c67 = peg$literalExpectation(\")\", false),\n      peg$c68 = function(args) {\n          return args.reduce(function (prev, curr) { prev[curr.key] = curr.value; return prev; }, {});\n      },\n      peg$c69 = \":\",\n      peg$c70 = peg$literalExpectation(\":\", false),\n      peg$c71 = \",\",\n      peg$c72 = peg$literalExpectation(\",\", false),\n      peg$c73 = function(ek, ev) { return { key: ek, value: ev }; },\n      peg$c74 = \"\\\"\",\n      peg$c75 = peg$literalExpectation(\"\\\"\", false),\n      peg$c76 = function(chars) { return chars.join(''); },\n      peg$c77 = \"'\",\n      peg$c78 = peg$literalExpectation(\"'\", false),\n      peg$c79 = \"\\\\\",\n      peg$c80 = peg$literalExpectation(\"\\\\\", false),\n      peg$c81 = function(char) { return char; },\n      peg$c82 = function(sequence) { return sequence; },\n      peg$c83 = \"b\",\n      peg$c84 = peg$literalExpectation(\"b\", false),\n      peg$c85 = function() { return \"\\b\";   },\n      peg$c86 = \"f\",\n      peg$c87 = peg$literalExpectation(\"f\", false),\n      peg$c88 = function() { return \"\\f\";   },\n      peg$c89 = \"n\",\n      peg$c90 = peg$literalExpectation(\"n\", false),\n      peg$c91 = function() { return \"\\n\";   },\n      peg$c92 = \"r\",\n      peg$c93 = peg$literalExpectation(\"r\", false),\n      peg$c94 = function() { return \"\\r\";   },\n      peg$c95 = \"t\",\n      peg$c96 = peg$literalExpectation(\"t\", false),\n      peg$c97 = function() { return \"\\t\";   },\n      peg$c98 = \"v\",\n      peg$c99 = peg$literalExpectation(\"v\", false),\n      peg$c100 = function() { return \"\\x0B\"; },\n      peg$c101 = \"u\",\n      peg$c102 = peg$literalExpectation(\"u\", false),\n      peg$c103 = function(digits) { return String.fromCharCode(parseInt(digits, 16)); },\n      peg$c104 = /^[0-9a-f]/i,\n      peg$c105 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"f\"]], false, true),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseStart() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseImportFile();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseTopLevelStatement();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseCommentLine();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseImportFile();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseTopLevelStatement();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseCommentLine();\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTopLevelStatement() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIntentDefinition();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSlotDefinition();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseAliasDefinition();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseProbabilityOperatorDefinition() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c1) {\n      s1 = peg$c1;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseBasicKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c3;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c5(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityOpt() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s0 = peg$c6;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityBody() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c3;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c10(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityOptionalBody() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityOpt();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c3;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c11(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityIntentDefinition() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 37) {\n      s1 = peg$c12;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityBody();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityArguments();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c14(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithSlotAndAlias() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n          s7 = peg$c19;\n          peg$currPos += 2;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 2) === peg$c21) {\n            s8 = peg$c21;\n            peg$currPos += 2;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c22); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s8 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7, s8];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 2) === peg$c19) {\n              s7 = peg$c19;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.substr(peg$currPos, 2) === peg$c21) {\n                s8 = peg$c21;\n                peg$currPos += 2;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7, s8];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotKeywordLiterals() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnyTextWithSlotAndAlias();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c26(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotValidInner() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseOptionalSlot();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseOptionalAlias();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseIntentAndSlotKeywordLiterals();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseOptionalSlot();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseOptionalAlias();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseIntentAndSlotKeywordLiterals();\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotInnerStatements() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseIntentAndSlotInnerStatement();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseIntentAndSlotInnerStatement();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotInnerStatement() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSamedent();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProbabilityOperatorDefinition();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseIntentAndSlotValidInner();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c27(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityIntentDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseIntentAndSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c28(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotVariationStartDefinition() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c29;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotVariationDefinition() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSlotVariationStartDefinition();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c31(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntitySlotDefinition() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c21) {\n      s1 = peg$c21;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotVariationDefinition();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c3;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseEntityArguments();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c32(s2, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotOptionalBody() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotVariationDefinition();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEntityOpt();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c3;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c33(s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOptionalSlot() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c34;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotOptionalBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c36(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithAlias() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n          s7 = peg$c19;\n          peg$currPos += 2;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n          if (s7 !== peg$FAILED) {\n            s4 = [s4, s5, s6, s7];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 2) === peg$c19) {\n              s7 = peg$c19;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseSlotKeywordLiterals() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnyTextWithAlias();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c26(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseSlotValidInner() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseOptionalAlias();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSlotKeywordLiterals();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseOptionalAlias();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseSlotKeywordLiterals();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotInnerStatement() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSamedent();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProbabilityOperatorDefinition();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotValidInner();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c27(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotInnerStatements() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseSlotInnerStatement();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseSlotInnerStatement();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntitySlotDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c37(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityAliasDefinition() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c38;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c40(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOptionalAlias() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c38;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityOptionalBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c41(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAliasDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityAliasDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseIntentAndSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c42(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSamedent() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c44;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c44;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c46(s1);\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIndent() {\n    var s0;\n\n    peg$savedPos = peg$currPos;\n    s0 = peg$c47();\n    if (s0) {\n      s0 = void 0;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDedent() {\n    var s0;\n\n    peg$savedPos = peg$currPos;\n    s0 = peg$c48();\n    if (s0) {\n      s0 = void 0;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithoutEOL() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s6 !== peg$FAILED) {\n          s4 = [s4, s5, s6];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDoubleSlashCommentLine() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c49) {\n        s2 = peg$c49;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c50); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAnyTextWithoutEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c51(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseHashCommentLine() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s2 = peg$c29;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAnyTextWithoutEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c51(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentLine() {\n    var s0;\n\n    s0 = peg$parseDoubleSlashCommentLine();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseHashCommentLine();\n    }\n\n    return s0;\n  }\n\n  function peg$parseImportFile() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c52) {\n        s2 = peg$c52;\n        peg$currPos += 7;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAnyTextWithoutEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c54(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBasicKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s7 = peg$c3;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n          if (s7 !== peg$FAILED) {\n            s4 = [s4, s5, s6, s7];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s7 = peg$c3;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s7 = peg$c3;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 63) {\n            s8 = peg$c6;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c7); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s8 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7, s8];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s7 = peg$c3;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s8 = peg$c6;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c7); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7, s8];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s7 = peg$c29;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s8 = peg$c3;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 63) {\n              s9 = peg$c6;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c7); }\n            }\n            peg$silentFails--;\n            if (s9 === peg$FAILED) {\n              s8 = void 0;\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            if (s8 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s9 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s9 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7, s8, s9];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 35) {\n              s7 = peg$c29;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s8 = peg$c3;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c4); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 63) {\n                  s9 = peg$c6;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c7); }\n                }\n                peg$silentFails--;\n                if (s9 === peg$FAILED) {\n                  s8 = void 0;\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s9 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7, s8, s9];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseInteger() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$c57.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c58); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$c57.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c58); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c59();\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOS() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseEOL();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseEOF();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c60); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOL() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseEOLNonWindows();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseEOLWindows();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseEOLNonWindows();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseEOLWindows();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOLNonWindows() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c17;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOLWindows() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s0 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityArguments() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c64;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c65); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseEntityArg();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseEntityArg();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c66;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c68(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityArg() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c44;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c44;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseArgumentKeyValueString();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s4 = peg$c44;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s4 = peg$c44;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\n          }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c69;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c70); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (input.charCodeAt(peg$currPos) === 32) {\n              s6 = peg$c44;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c45); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (input.charCodeAt(peg$currPos) === 32) {\n                s6 = peg$c44;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c45); }\n              }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseArgumentKeyValueString();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                s8 = [];\n                if (input.charCodeAt(peg$currPos) === 32) {\n                  s9 = peg$c44;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  if (input.charCodeAt(peg$currPos) === 32) {\n                    s9 = peg$c44;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                  }\n                }\n                if (s8 === peg$FAILED) {\n                  s8 = null;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s9 = peg$c71;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c72); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s8 = [s8, s9];\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  if (input.charCodeAt(peg$currPos) === 32) {\n                    s9 = peg$c44;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                  }\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    if (input.charCodeAt(peg$currPos) === 32) {\n                      s9 = peg$c44;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                    }\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c73(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentKeyValueString() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c74;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDoubleQuotedString();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseDoubleQuotedString();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c74;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c75); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c76(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c77;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c78); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseSingleQuotedString();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseSingleQuotedString();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c77;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c76(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoubleQuotedString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s2 = peg$c74;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c75); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c79;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s2 = peg$c17;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c81(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c79;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseStringEscapedChars();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c82(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleQuotedString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s2 = peg$c77;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c78); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c79;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s2 = peg$c17;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c81(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c79;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseStringEscapedChars();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c82(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringEscapedChars() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s0 = peg$c77;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c78); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s0 = peg$c74;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c75); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s0 = peg$c79;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c80); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 98) {\n            s1 = peg$c83;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c84); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c85();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 102) {\n              s1 = peg$c86;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c87); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c88();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 110) {\n                s1 = peg$c89;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c90); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c91();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 114) {\n                  s1 = peg$c92;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c93); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c94();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 116) {\n                    s1 = peg$c95;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c96); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c97();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 118) {\n                      s1 = peg$c98;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c99); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c100();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 117) {\n                        s1 = peg$c101;\n                        peg$currPos++;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c102); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        s2 = peg$currPos;\n                        s3 = peg$currPos;\n                        s4 = peg$parseHEXDIG();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parseHEXDIG();\n                          if (s5 !== peg$FAILED) {\n                            s6 = peg$parseHEXDIG();\n                            if (s6 !== peg$FAILED) {\n                              s7 = peg$parseHEXDIG();\n                              if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          s2 = input.substring(s2, peg$currPos);\n                        } else {\n                          s2 = s3;\n                        }\n                        if (s2 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c103(s2);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHEXDIG() {\n    var s0;\n\n    if (peg$c104.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c105); }\n    }\n\n    return s0;\n  }\n\n   var STEP = 4; var level = 0; var entry = false; \n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}