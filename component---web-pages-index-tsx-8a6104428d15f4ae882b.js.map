{"version":3,"sources":["webpack:///./src/utils.ts","webpack:///./src/main.ts","webpack:///./src/adapters/luis.ts","webpack:///./src/adapters/rasa.ts","webpack:///./src/adapters/snips.ts","webpack:///./src/adapters/web.ts","webpack:///./web/lib/editorConfig.ts","webpack:///./web/components/Editor/editorStyles.tsx","webpack:///./web/components/Editor/Editor.tsx","webpack:///./web/lib/utils.ts","webpack:///./web/components/globalStyles.tsx","webpack:///./web/components/Logo.tsx","webpack:///./web/pages/index.tsx","webpack:///./parser/chatito.js"],"names":["maxSentencesForSentence","entities","stack","sentence","reduce","accumulator","t","acc","def","type","innerEntityKey","value","Error","inner","probability","key","s","innerEntityVariations","maxSentencesForEntity","opt","ed","entity","entitiesStack","numberOfSlotsInStack","found","find","et","last","validateAndPushToStack","map","val","isObject","item","Array","mergeDeep","target","source","Object","isArray","undefined","_Object$assign","_Object$assign2","logger","console","config","defaultDistribution","chatito","require","chance","chatitoFormatPostProcess","data","arr","next","i","arrShadow","length","lastWord","replace","trim","assign","calcSentencesProbabilities","isPercentageProbability","isEvenDistribution","definedSentenceProbabilities","sumOfTotalProbabilitiesDefined","maxCounts","sentencesWithNullProbabilityCount","totalMaxCountsToShareBetweenNullProbs","prob","p","getVariationsFromEntity","_ref","asyncToGenerator_default","regenerator_default","a","mark","_callee","optional","cache","variationKey","cacheKey","cacheStats","counts","probabilityTypeDefined","_iterator","_isArray","_i","_ref2","c","mxc","isPercent","setenceProbabilityType","probabilities","currentEntityCache","optionalProb","sentenceIndex","isSlotDefSentenceWithOnlyOneAlias","_iterator2","_isArray2","_i2","_ref3","slotsInSentenceKeys","currentCache","sentenceVariation","returnSentenceTokens","_iterator3","_isArray3","_i3","_ref4","returnToken","ettArgs","wrap","_context","prev","distribution","Symbol","iterator","abrupt","done","utils","parseFloat","main_chance","bool","likelihood","Set","Map","sent","args","stop","_x","_x2","_x3","_x4","apply","this","arguments","astFromString","str","datasetFromString","writterFn","importer","currentPath","ast","datasetFromAST","definitionsFromAST","initialAst","importHandler","currPath","operatorDefinitions","Intent","Slot","Alias","filePath","dsl","concat","od","getImports","from","to","fileContent","importAst","outAst","ett","e","message","JSON","location","odKey","_ref5","_callee2","intentKeys","_i4","_intentKeys","intentKey","maxPossibleCombinations","maxIntentExamples","entityArgs","trainingN","testingN","generatedTrainingExamplesCount","generatedTestingExamplesCount","intentMax","maxEx","globalCache","collitionsCache","duplicatesCounter","intentSentence","utterance","utteranceString","completedTraining","completedTesting","isTrainingExample","maxDupes","maxDupesLimit","isBigDataset","m","_context2","training","parseInt","testing","n","Math","_x5","_x6","_x7","_x8","luis_adapter","_adapter","formatOptions","utteranceWriter","example","slot","endCharIndex","entityName","startCharIndex","text","intentName","entityLabels","gen","rasa_adapter","adapters_rasa_adapter","synonyms","rasa_nlu_data","regex_features","entity_synonyms","common_examples","synonym","end","start","intent","k","snips_adapter","adapters_snips_adapter","synonymsForSlots","language","intents","utterances","u","ret","slotKey","synonymsValue","slotSynonymsSet","synonymsList","push","web_adapter","adapters_web_adapter","dataset","tabs","title","chatitoPrism","comments","pattern","greedy","imports","intentDefinition","inside","intentArguments","slotDefinition","slotArguments","aliasDefinition","aliasArguments","alias","default","rasaDefaultOptions","snipsDefaultOptions","AlertNotification","styled","withConfig","displayName","componentId","state","CodeStyles","TabButton","active","CloseTab","EditorHeader","TabsAreaButton","TabsArea","EditorWrapper","Drawer","showDrawer","EditorOverlay","BlockWrapper","BlockWrapperTitle","CloseDrawerButton","DrawerFormField","SelectWrapper","CheckboxWrapper","adapters","web_namespaceObject","rasa","rasa_namespaceObject","snips","snips_namespaceObject","luis","luisAdapter","CodeFlask","ReactJson","window","Editor","func","wait","timeout","error","warning","activeTabIndex","adapterOptions","currentAdapter","useCustomOptions","frequencyDistribution","tabsContainer","React","codeflask","editorUpdatesSetupCount","codeInputValue","debouncedTabDSLValidation","_this","validation","getDSLValidation","newState","setState","saveToLocalStorage","_len","_key","context","clearTimeout","setTimeout","renderDatasetGeneratorSettings","react","style","display","flexDirection","borderRight","htmlFor","id","name","onChange","onAdapterChange","onDistributionChange","checked","onCustomOptionsCheckboxChange","textAlign","fontSize","maxWidth","margin","href","renderEditAdapterOptions","padding","onClick","generateDataset","borderTop","flex","src","theme","iconStyle","enableClipboard","displayDataTypes","collapsed","onEdit","onEditAdapterOptions","onAdd","onDelete","renderDatasetPreviewer","renderTabButton","onCloseTab","closerTab","changeTab","onCloseDrawer","changes","updated_src","onAddFile","filename","prompt","current","scrollTo","left","scrollWidth","behavior","onToggleDrawer","validateChatitoFiles","t0","alert","saveTabs","saveAdapterOptions","saveCurrentAdapter","localStorage","loadFromLocalIfPresent","parseAsJSON","loadFromLocalStorage","cb","localTabs","localAdapterOptions","localCurrentAdapter","localDefaultDistribution","updateCode","setLineNumber","ati","newActiveTabIndex","slice","intentsWithoutLimit","filter","column","some","tab","importFile","startPath","endPath","tabFound","testingDataset","adapter","_loop2","_ret","datasetBlob","testingBlob","_context3","v","entries","delegateYield","t1","Blob","saveAs","Date","getTime","componentDidMount","_this2","flask","lineNumbers","code","render","alertState","innerRef","backgroundColor","disabled","stopPropagation","Global","createGlobalStyle","_templateObject","Header","Logo","fill","viewBox","version","x","y","stroke","d","Index","Helmet_default","rel","sizes","__PATH_PREFIX__","color","content","width","minWidth","height","paddingLeft","Editor_Editor","peg$SyntaxError","expected","captureStackTrace","child","parent","ctor","constructor","prototype","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","class","escapedParts","parts","classEscape","inverted","any","other","description","hex","ch","charCodeAt","toString","toUpperCase","j","descriptions","sort","join","describeExpected","describeFound","module","exports","SyntaxError","parse","input","options","peg$result","peg$FAILED","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$literalExpectation","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","percent","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","o","peg$c29","peg$c30","peg$c31","peg$c32","variation","peg$c33","peg$c34","peg$c35","peg$c36","op","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$otherExpectation","peg$c44","peg$c45","peg$c46","level","STEP","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","substring","peg$savedPos","peg$currPos","peg$c58","peg$c59","peg$c60","peg$c61","peg$classExpectation","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","peg$c74","curr","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","ek","ev","peg$c80","peg$c81","peg$c82","chars","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","char","peg$c88","sequence","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","digits","String","fromCharCode","peg$c110","peg$c111","peg$posDetailsCache","line","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","peg$parseImportFile","peg$parseTopLevelStatement","peg$parseCommentLine","s2","s5","peg$parseEOL","s3","peg$parseEntityBody","peg$parseEntityArguments","peg$parseEntityIntentDefinition","peg$parseIndent","peg$parseIntentAndSlotInnerStatements","peg$parseDedent","peg$parseIntentDefinition","s4","substr","peg$parseSlotKeywordLiteral","peg$parseSlotVariationDefinition","peg$parseEntitySlotDefinition","peg$parseSlotInnerStatement","peg$parseSlotInnerStatements","peg$parseSlotDefinition","peg$parseEntityAliasDefinition","peg$parseAliasDefinition","peg$parseProbabilityOperatorDefinition","peg$parsezero","test","charAt","peg$parseDigit1_9","peg$parseDigit0_9","peg$parseint","peg$parseDecimalPoint","peg$parsefrac","peg$parseNumber","peg$parseEntityOpt","peg$parseEntityKeywordLiteral","peg$parseIntentAndSlotKeywordLiterals","s6","s7","s8","peg$parseAnyTextWithSlotAndAlias","peg$parseIntentAndSlotInnerStatement","peg$parseSamedent","peg$parseOptionalSlot","peg$parseOptionalAlias","peg$parseIntentAndSlotValidInner","peg$parseEOS","peg$parseSlotVariationStartDefinition","peg$parseSlotOptionalBody","peg$parseSlotKeywordLiterals","peg$parseAnyTextWithAlias","peg$parseSlotValidInner","peg$parseEntityOptionalBody","peg$parseAnyTextWithoutEOL","peg$parseDoubleSlashCommentLine","peg$parseHashCommentLine","s9","peg$parseEOF","peg$parseEOLNonWindows","peg$parseEOLWindows","peg$parseEntityArg","peg$parseArgumentKeyValueString","peg$parseDoubleQuotedString","peg$parseSingleQuotedString","peg$parseStringEscapedChars","peg$parseHEXDIG"],"mappings":"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","file":"component---web-pages-index-tsx-8a6104428d15f4ae882b.js","sourcesContent":["import { IChatitoEntityAST, IEntities, ISingleSentence } from './types';\n\nexport const validateAndPushToStack = (entity: IChatitoEntityAST, entitiesStack: IChatitoEntityAST[]) => {\n    let numberOfSlotsInStack = 0;\n    const found = entitiesStack.find(et => {\n        if (et.type === 'SlotDefinition') {\n            numberOfSlotsInStack++;\n        }\n        return et.key === entity.key && et.type === entity.type;\n    });\n    if (found) {\n        const last = entitiesStack.pop() || found;\n        throw new Error(`Invalid nesting of entity: '${entity.key}' inside entity '${last.key}'. Infinite loop prevented.`);\n    }\n    if (numberOfSlotsInStack !== 0 && entity.type === 'SlotDefinition') {\n        const last = entitiesStack.pop() || entity;\n        throw new Error(`Invalid nesting of slot: '${entity.key}' inside '${last.key}'. An slot can't reference other slot.`);\n    }\n    entitiesStack.push(entity);\n    return entitiesStack;\n};\n\nexport const maxSentencesForSentence = (entities: IEntities, stack?: IChatitoEntityAST[]) => (sentence: ISingleSentence) => {\n    const sr = sentence.sentence.reduce((accumulator, t) => {\n        let acc = accumulator;\n        if (t.type === 'Slot' || t.type === 'Alias') {\n            const def = entities[t.type];\n            const innerEntityKey = t.variation ? `${t.value}#${t.variation}` : t.value;\n            if (!def[innerEntityKey]) {\n                if (t.type === 'Alias') {\n                    def[innerEntityKey] = {\n                        inner: [\n                            {\n                                sentence: [{ value: innerEntityKey, type: 'Text' }],\n                                probability: null\n                            }\n                        ],\n                        key: t.value,\n                        type: 'AliasDefinition'\n                    };\n                } else {\n                    throw new Error(`${t.type} not defined: ${innerEntityKey}`);\n                }\n            }\n            const s = stack ? stack.slice(0) : [];\n            let innerEntityVariations = maxSentencesForEntity(def[innerEntityKey], entities, s);\n            if (t.opt) {\n                innerEntityVariations++;\n            }\n            acc = acc * innerEntityVariations;\n        }\n        return acc;\n    }, 1);\n    return sr;\n};\n\nexport const maxSentencesForEntity = (ed: IChatitoEntityAST, entities: IEntities, stack: IChatitoEntityAST[] = []): number => {\n    validateAndPushToStack(ed, stack);\n    return ed.inner.map(maxSentencesForSentence(entities, stack)).reduce((acc, val) => acc + val);\n};\n\n// Deep merge objects\n// https://gist.github.com/Salakar/1d7137de9cb8b704e48a\nconst isObject = (item: any) => item && typeof item === 'object' && !Array.isArray(item) && item !== null;\nconst isArray = (item: any) => {\n    if (typeof Array.isArray === 'undefined') {\n        return Object.prototype.toString.call(item) === '[object Array]';\n    } else {\n        return Array.isArray(item);\n    }\n};\nexport const mergeDeep = <T>(target: any, source: any): T => {\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isArray(source[key])) {\n                if (target[key] === undefined) {\n                    target[key] = [];\n                }\n                target[key] = target[key].concat(source[key]);\n            } else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n    }\n    return target;\n};\n","import { Chance } from 'chance';\nimport {\n    IChatitoCache,\n    IChatitoEntityAST,\n    IChatitoParser,\n    IEntities,\n    IEntityDef,\n    ISentenceTokens,\n    IStatCache,\n    IUtteranceWriter\n} from './types';\nimport * as utils from './utils';\n\nconst logger = console;\n\nexport const VALID_DISTRIBUTIONS = ['regular', 'even'] as const;\n\nexport interface IConfigOptions {\n    defaultDistribution?: typeof VALID_DISTRIBUTIONS[number];\n}\n\ntype Configuration = Required<IConfigOptions>;\n\nexport const config: Configuration = {\n    defaultDistribution: 'regular'\n};\n\n// tslint:disable-next-line:no-var-requires\nconst chatito = require('../parser/chatito') as IChatitoParser;\nconst chance = new Chance();\n\nconst chatitoFormatPostProcess = (data: ISentenceTokens[]) => {\n    const arr = data.reduce(\n        (accumulator: ISentenceTokens[], next: ISentenceTokens, i, arrShadow) => {\n            if (accumulator.length) {\n                const lastWord = accumulator[accumulator.length - 1];\n                if (lastWord.type === next.type && lastWord.type === 'Text') {\n                    accumulator[accumulator.length - 1] = {\n                        type: lastWord.type,\n                        value: (lastWord.value + next.value).replace(/\\s+/g, ' ')\n                    };\n                } else {\n                    accumulator.push(next);\n                }\n            } else if (next.value.trim()) {\n                accumulator.push(next);\n            }\n            if (i === arrShadow.length - 1) {\n                // if its the last token of a sentence\n                // remove empty strings at the end\n                if (accumulator.length) {\n                    if (!accumulator[accumulator.length - 1].value.trim()) {\n                        accumulator.pop();\n                    }\n                    accumulator[accumulator.length - 1] = Object.assign({}, accumulator[accumulator.length - 1], {\n                        value: accumulator[accumulator.length - 1].value.replace(/\\s+$/g, '')\n                    });\n                }\n            }\n            return accumulator;\n        },\n        [] as ISentenceTokens[]\n    );\n    if (arr.length) {\n        arr[0] = Object.assign({}, arr[0], {\n            value: arr[0].value.replace(/^\\s+/, '')\n        });\n    }\n    if (!arr.length) {\n        throw new Error(`Some sentence generated an empty string. Can't map empty to an intent.`);\n    }\n    return arr;\n};\n\nconst calcSentencesProbabilities = (\n    isPercentageProbability: boolean,\n    isEvenDistribution: boolean,\n    definedSentenceProbabilities: Array<number | null>,\n    sumOfTotalProbabilitiesDefined: number,\n    maxCounts: number[]\n) => {\n    let sentencesWithNullProbabilityCount = 0;\n    let totalMaxCountsToShareBetweenNullProbs = 0;\n    definedSentenceProbabilities.forEach((prob, i) => {\n        if (prob === null) {\n            sentencesWithNullProbabilityCount += 1;\n            totalMaxCountsToShareBetweenNullProbs += maxCounts[i];\n        }\n    });\n    let probabilities: number[];\n    if (isPercentageProbability) {\n        // if defined probabilities is percentual, then calculate each sentence chances in percent\n        probabilities = definedSentenceProbabilities.map((p, i) => {\n            if (p !== null) {\n                return p;\n            }\n            if (isEvenDistribution) {\n                return (100 - sumOfTotalProbabilitiesDefined) / sentencesWithNullProbabilityCount;\n            }\n            return (((maxCounts[i] * 100) / totalMaxCountsToShareBetweenNullProbs) * (100 - sumOfTotalProbabilitiesDefined)) / 100;\n        });\n    } else {\n        // if probabilityTypeDefined is weighted, then multiply the weight by max counts\n        probabilities = definedSentenceProbabilities.map((p, i) => {\n            if (p !== null) {\n                return isEvenDistribution ? p : maxCounts[i] * p;\n            }\n            if (isEvenDistribution) {\n                return 1;\n            }\n            return maxCounts[i];\n        });\n    }\n    return probabilities;\n};\n\n// recursive function that generates variations using a cache\n// that uses counts to avoid repetitions\nexport const getVariationsFromEntity = async <T>(\n    ed: IChatitoEntityAST,\n    entities: IEntities,\n    optional: boolean,\n    cache: IChatitoCache\n): Promise<ISentenceTokens[]> => {\n    // if this entity is a slot variation, add that as the key\n    const variationKey = ed.variation ? `#${ed.variation}` : '';\n    const cacheKey = `${ed.type}-${ed.key}${variationKey}`;\n    let cacheStats = cache.get(cacheKey) as IStatCache;\n    if (!cacheStats) {\n        // if the entity is not cache, create an empty cache for it\n        const counts: IChatitoCache[] = [];\n        const maxCounts: number[] = []; // calcs the max possible utterancees for each sentence\n        let probabilityTypeDefined: 'w' | '%' | null = null;\n        const definedSentenceProbabilities: Array<number | null> = []; // the posibility operators defined for sentences\n        let isEvenDistribution = config.defaultDistribution === 'even';\n        if (ed.args && ed.args.distribution) {\n            isEvenDistribution = ed.args.distribution === 'even';\n        }\n        let sumOfTotalProbabilitiesDefined = 0;\n        for (const c of ed.inner) {\n            // get counts for each of the sentences inside the entity\n            counts.push(new Map());\n            let mxc = utils.maxSentencesForSentence(entities)(c);\n            if (optional) {\n                mxc++;\n            }\n            maxCounts.push(mxc);\n            if (c.probability === null) {\n                definedSentenceProbabilities.push(null);\n            } else {\n                const p = c.probability || '';\n                const isPercent = p.slice(-1) === '%';\n                const setenceProbabilityType = isPercent ? '%' : 'w';\n                if (probabilityTypeDefined === null) {\n                    probabilityTypeDefined = setenceProbabilityType;\n                } else if (setenceProbabilityType !== probabilityTypeDefined) {\n                    throw new Error(`All probability definitions for \"${cacheKey}\" must be of the same type.`);\n                }\n                const prob = parseFloat(isPercent ? p.slice(0, -1) : p);\n                if (isPercent) {\n                    if (prob <= 0 || prob > 100) {\n                        throw new Error(`Probability \"${p}\" must be greater than 0 up to 100. At ${cacheKey}`);\n                    }\n                } else if (setenceProbabilityType === 'w') {\n                    if (prob <= 0) {\n                        throw new Error(`Probability weight \"${p}\" must be greater than 0. At ${cacheKey}`);\n                    }\n                }\n                sumOfTotalProbabilitiesDefined += prob;\n                definedSentenceProbabilities.push(prob);\n            }\n        }\n        if (probabilityTypeDefined === '%' && sumOfTotalProbabilitiesDefined && sumOfTotalProbabilitiesDefined > 100) {\n            throw new Error(\n                `The sum of sentence probabilities (${sumOfTotalProbabilitiesDefined}) for an entity can't be higher than 100%. At ${cacheKey}`\n            );\n        }\n        const isPercentageProbability = probabilityTypeDefined === '%';\n        const probabilities = calcSentencesProbabilities(\n            isPercentageProbability,\n            isEvenDistribution,\n            definedSentenceProbabilities,\n            sumOfTotalProbabilitiesDefined,\n            maxCounts\n        );\n        const currentEntityCache: IStatCache = { counts, maxCounts, optional, probabilities };\n        cache.set(cacheKey, currentEntityCache);\n        cacheStats = cache.get(cacheKey) as IStatCache;\n    }\n    // NOTE: if an entity has 5 sentences we add one (the optional empty sentence) and get that probability\n    const optionalProb = 100 / (cacheStats.probabilities.length + 1);\n    let sentenceIndex = chance.weighted(Array.from(cacheStats.probabilities.keys()), cacheStats.probabilities);\n    if (cacheStats.optional && chance.bool({ likelihood: optionalProb })) {\n        sentenceIndex = -1;\n    }\n    if (sentenceIndex === -1) {\n        return [];\n    }\n    const sentence = ed.inner[sentenceIndex].sentence;\n    let accumulator: ISentenceTokens[] = [];\n    // For slots where a sentence is composed of only one alias, we add the synonym tag,\n    // to denote that the generated alias is a synonym of its alias name\n    const isSlotDefSentenceWithOnlyOneAlias = ed.type === 'SlotDefinition' && sentence.length === 1 && sentence[0].type === 'Alias';\n    for (const t of sentence) {\n        // slots and alias entities generate the sentences recursively\n        const slotsInSentenceKeys: Set<string> = new Set([]);\n        if (t.type === 'Slot' || t.type === 'Alias') {\n            const def = entities[t.type];\n            const innerEntityKey = t.variation ? `${t.value}#${t.variation}` : t.value;\n            const currentCache = slotsInSentenceKeys.has(innerEntityKey) ? cacheStats.counts[sentenceIndex] : new Map();\n            slotsInSentenceKeys.add(innerEntityKey);\n            const sentenceVariation = await getVariationsFromEntity(def[innerEntityKey], entities, !!t.opt, currentCache);\n            if (sentenceVariation.length) {\n                const returnSentenceTokens = chatitoFormatPostProcess(sentenceVariation);\n                for (const returnToken of returnSentenceTokens) {\n                    const ettArgs = def[innerEntityKey].args;\n                    if (isSlotDefSentenceWithOnlyOneAlias && ettArgs && ettArgs.synonym === 'true') {\n                        returnToken.synonym = t.value;\n                    }\n                    if (t.type === 'Slot') {\n                        if (def[innerEntityKey].args) {\n                            returnToken.args = def[innerEntityKey].args;\n                        }\n                        returnToken.value = returnToken.value.trim();\n                        returnToken.type = t.type;\n                        returnToken.slot = t.value;\n                    }\n                    accumulator = accumulator.concat(returnToken);\n                }\n            }\n        } else {\n            accumulator = accumulator.concat(t);\n        }\n    }\n    return accumulator;\n};\n\nexport type IFileImporter = (\n    fromPath: string,\n    importFile: string\n) => {\n    filePath: string;\n    dsl: string;\n};\n\nexport const astFromString = (str: string) => chatito.parse(str);\nexport const datasetFromString = (str: string, writterFn: IUtteranceWriter, importer?: IFileImporter, currentPath?: string) => {\n    const ast = astFromString(str);\n    return datasetFromAST(ast, writterFn, importer, currentPath);\n};\n\nexport const getImports = (from: string, to: string, importer: IFileImporter) => {\n    const fileContent = importer(from, to);\n    if (!fileContent || !fileContent.dsl) {\n        throw new Error(`Failed importing ${to}`);\n    }\n    try {\n        const importAst = astFromString(fileContent.dsl);\n        let outAst: IChatitoEntityAST[] = [];\n        importAst.forEach(ett => {\n            if (ett.type === 'ImportFile' && ett.value) {\n                outAst = [...outAst, ...getImports(fileContent.filePath, ett.value, importer)];\n            } else if (ett.type === 'AliasDefinition' || ett.type === 'SlotDefinition') {\n                outAst = [...outAst, ett];\n            }\n        });\n        return outAst;\n    } catch (e) {\n        throw new Error(`Failed importing ${to}. ${e.message} - ${JSON.stringify(e.location)}`);\n    }\n};\n\nexport const definitionsFromAST = (initialAst: IChatitoEntityAST[], importHandler?: IFileImporter, currPath?: string) => {\n    const operatorDefinitions: IEntities = { Intent: {}, Slot: {}, Alias: {} };\n    if (!initialAst || !initialAst.length) {\n        return;\n    }\n    const importer = importHandler ? importHandler : () => ({ filePath: '', dsl: '' });\n    const currentPath = currPath ? currPath : '';\n    // gete imports first\n    let ast: IChatitoEntityAST[] = [...initialAst];\n    initialAst.forEach(od => {\n        if (od.type === 'ImportFile' && od.value) {\n            ast = [...ast, ...getImports(currentPath, od.value, importer)];\n        }\n    });\n    ast.forEach(od => {\n        let entity: IEntityDef;\n        if (od.type === 'IntentDefinition') {\n            entity = operatorDefinitions.Intent;\n        } else if (od.type === 'SlotDefinition') {\n            entity = operatorDefinitions.Slot;\n        } else if (od.type === 'AliasDefinition') {\n            entity = operatorDefinitions.Alias;\n        } else {\n            // type is 'Comment' or 'ImportFile'\n            return; // skip comments\n        }\n        const odKey = od.variation ? `${od.key}#${od.variation}` : od.key;\n        if (entity[odKey]) {\n            throw new Error(`Duplicate definition for ${od.type} '${odKey}'`);\n        }\n        entity[odKey] = od;\n    });\n    return operatorDefinitions;\n};\n\nexport const datasetFromAST = async (\n    initialAst: IChatitoEntityAST[],\n    writterFn: IUtteranceWriter,\n    importHandler?: IFileImporter,\n    currPath?: string\n) => {\n    const operatorDefinitions = definitionsFromAST(initialAst, importHandler, currPath);\n    if (!operatorDefinitions) {\n        return;\n    }\n    const intentKeys = Object.keys(operatorDefinitions.Intent);\n    if (!intentKeys || !intentKeys.length) {\n        return;\n    }\n    for (const intentKey of intentKeys) {\n        // and for all tokens inside the sentence\n        const maxPossibleCombinations = utils.maxSentencesForEntity(operatorDefinitions.Intent[intentKey], operatorDefinitions);\n        let maxIntentExamples = maxPossibleCombinations; // counter that will change\n        const entityArgs = operatorDefinitions.Intent[intentKey].args;\n        // by default if no training or testing arguments are declared, all go to training\n        let trainingN = maxIntentExamples;\n        let testingN = 0;\n        let generatedTrainingExamplesCount = 0;\n        let generatedTestingExamplesCount = 0;\n        if (entityArgs) {\n            if (entityArgs.training) {\n                trainingN = parseInt(entityArgs.training, 10);\n                if (trainingN < 1) {\n                    throw new Error(`The 'training' argument for ${intentKey} must be higher than 0.`);\n                }\n                if (entityArgs.testing) {\n                    testingN = parseInt(entityArgs.testing, 10);\n                    if (testingN < 1) {\n                        throw new Error(`The 'testing' argument for ${intentKey} must be higher than 0.`);\n                    }\n                }\n            }\n            let intentMax = trainingN + testingN;\n            if (intentMax > maxIntentExamples) {\n                intentMax = maxIntentExamples;\n                logger.warn(\n                    `Can't generate ${intentMax} examples. Using the maximum possible combinations: ${maxIntentExamples}. NOTE: Using the maximum leads to overfitting.`\n                );\n            } else if (intentMax < maxIntentExamples) {\n                maxIntentExamples = intentMax;\n            }\n        }\n        const maxEx = maxIntentExamples;\n        const globalCache: IChatitoCache = new Map();\n        const collitionsCache: { [id: string]: boolean } = {};\n        let duplicatesCounter = 0;\n        while (maxIntentExamples) {\n            const intentSentence = await getVariationsFromEntity(\n                operatorDefinitions.Intent[intentKey],\n                operatorDefinitions,\n                false,\n                globalCache\n            );\n            const utterance = chatitoFormatPostProcess(intentSentence);\n            const utteranceString = utterance.reduce((p, n) => p + n.value, '');\n            if (!collitionsCache[utteranceString]) {\n                collitionsCache[utteranceString] = true;\n                const completedTraining = generatedTrainingExamplesCount >= trainingN;\n                const completedTesting = generatedTestingExamplesCount >= testingN;\n                let isTrainingExample = !completedTraining;\n                if (!completedTraining && !completedTesting) {\n                    // reference: https://stackoverflow.com/questions/44263229/generate-a-random-boolean-70-true-30-false\n                    isTrainingExample = Math.random() < 0.7;\n                }\n                writterFn(utterance, intentKey, isTrainingExample);\n                maxIntentExamples--;\n                if (isTrainingExample) {\n                    generatedTrainingExamplesCount++;\n                } else {\n                    generatedTestingExamplesCount++;\n                }\n            } else {\n                duplicatesCounter++;\n                // note: trick to make all combinations for small datasets, but avoid them for large ones\n                const smallDupesLimit = 10000;\n                const maxDupes = maxPossibleCombinations * maxPossibleCombinations;\n                const maxDupesLimit = Math.floor(maxDupes / 2);\n                const isBigDataset = maxPossibleCombinations > smallDupesLimit;\n                if (\n                    (isBigDataset && duplicatesCounter > maxDupesLimit) ||\n                    (!isBigDataset && duplicatesCounter > maxDupes * maxPossibleCombinations)\n                ) {\n                    // prevent cases where duplicates are part of the entity definitions\n                    let m = `Too many duplicates while generating dataset! Looks like we have probably reached `;\n                    m += `the maximun ammount of possible unique generated examples. `;\n                    m += `The generator has stopped at ${maxEx - maxIntentExamples} examples for intent ${intentKey}.`;\n                    logger.warn(m);\n                    maxIntentExamples = 0;\n                }\n            }\n        }\n    }\n};\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface ILuisEntityLabel {\n    startCharIndex: number;\n    endCharIndex: number;\n    entityName: string;\n}\nexport interface ILuisExample {\n    text: string;\n    intentName: string;\n    entityLabels: ILuisEntityLabel[];\n}\nexport interface ILuisDataset {\n    data: ILuisExample[];\n}\n\nexport interface ILuisTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any, importer?: gen.IFileImporter, currentPath?: string) {\n    const training: ILuisDataset = { data: [] };\n    const testing: ILuisDataset = { data: [] };\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const example = utterance.reduce(\n            (acc, next) => {\n                if (next.type === 'Slot' && next.slot) {\n                    acc.entityLabels.push({\n                        endCharIndex: acc.text.length + next.value.length,\n                        entityName: next.slot,\n                        startCharIndex: acc.text.length\n                    });\n                }\n                acc.text += next.value;\n                return acc;\n            },\n            { text: '', intentName: intentKey, entityLabels: [] } as ILuisExample\n        );\n        if (isTrainingExample) {\n            training.data.push(example);\n        } else {\n            testing.data.push(example);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter, importer, currentPath);\n    return { training, testing };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface IRasaEntity {\n    start: number;\n    end: number;\n    value: string;\n    entity: string;\n}\nexport interface IRasaExample {\n    text: string;\n    intent: string;\n    entities: IRasaEntity[];\n}\nexport interface IRasaDataset {\n    rasa_nlu_data: {\n        regex_features: any[];\n        entity_synonyms: Array<{ value: string; synonyms: string[] }>;\n        common_examples: IRasaExample[];\n    };\n}\n\nexport interface IRasaTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any, importer?: gen.IFileImporter, currentPath?: string) {\n    const training: IRasaDataset = {\n        rasa_nlu_data: {\n            regex_features: [],\n            entity_synonyms: [],\n            common_examples: []\n        }\n    };\n    const testing = { rasa_nlu_data: { common_examples: [] as IRasaExample[] } };\n    const synonyms: { [key: string]: Set<string> } = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const example = utterance.reduce(\n            (acc, next) => {\n                if (next.type === 'Slot' && next.slot) {\n                    if (next.synonym) {\n                        if (!synonyms[next.synonym]) {\n                            synonyms[next.synonym] = new Set();\n                        }\n                        if (next.synonym !== next.value) {\n                            synonyms[next.synonym].add(next.value);\n                        }\n                    }\n                    acc.entities.push({\n                        end: acc.text.length + next.value.length,\n                        entity: next.slot,\n                        start: acc.text.length,\n                        value: next.synonym ? next.synonym : next.value\n                    });\n                }\n                acc.text += next.value;\n                return acc;\n            },\n            { text: '', intent: intentKey, entities: [] } as IRasaExample\n        );\n        if (isTrainingExample) {\n            training.rasa_nlu_data.common_examples.push(example);\n        } else {\n            testing.rasa_nlu_data.common_examples.push(example);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter, importer, currentPath);\n    Object.keys(synonyms).forEach(k => {\n        training.rasa_nlu_data.entity_synonyms.push({\n            synonyms: Array.from(synonyms[k]),\n            value: k\n        });\n    });\n    return { training, testing };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface ISnipsUtteranceData {\n    text: string;\n    entity?: string;\n    slot_name?: string;\n}\nexport interface ISnipsUtterance {\n    data: ISnipsUtteranceData[];\n}\nexport interface ISnipsIntent {\n    utterances: ISnipsUtterance[];\n}\nexport interface ISnipsDataset {\n    intents: { [intentKey: string]: ISnipsIntent };\n    entities: {\n        [entityKey: string]: {\n            data?: Array<{ value: string; synonyms: string[] }>;\n            use_synonyms?: boolean;\n            automatically_extensible?: boolean;\n        };\n    };\n    language: string;\n}\n\nexport interface ISnipsTestingDataset {\n    [intent: string]: ISentenceTokens[][];\n}\n\nexport async function adapter(dsl: string, formatOptions?: any, importer?: gen.IFileImporter, currentPath?: string) {\n    const training: ISnipsDataset = { language: 'en', entities: {}, intents: {} };\n    const testing: ISnipsTestingDataset = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const synonymsForSlots: {\n        [slot: string]: { [key: string]: Set<string> };\n    } = {};\n    // const slots: Set<string> = new Set();\n    const entities: Set<string> = new Set();\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        if (isTrainingExample) {\n            if (!training.intents[intentKey]) {\n                training.intents[intentKey] = { utterances: [] };\n            }\n            const data = utterance.map(u => {\n                const ret: ISnipsUtteranceData = { text: u.value };\n                if (u.type === 'Slot' && u.slot) {\n                    ret.slot_name = u.slot;\n                    if (u.args) {\n                        Object.keys(u.args).forEach(key => {\n                            if (u.args && key === 'entity') {\n                                entities.add(u.args[key]);\n                                ret.entity = u.args[key];\n                            }\n                        });\n                    }\n                    if (!ret.entity) {\n                        ret.entity = u.slot;\n                        entities.add(u.slot);\n                    }\n                    if (u.synonym && ret.entity) {\n                        if (!synonymsForSlots[ret.entity]) {\n                            synonymsForSlots[ret.entity] = {};\n                        }\n                        const synonyms = synonymsForSlots[ret.entity];\n                        if (!synonyms[u.synonym]) {\n                            synonyms[u.synonym] = new Set();\n                        }\n                        if (u.synonym !== u.value) {\n                            synonyms[u.synonym].add(u.value);\n                        }\n                    }\n                }\n                return ret;\n            });\n            training.intents[intentKey].utterances.push({ data });\n        } else {\n            if (!testing[intentKey]) {\n                testing[intentKey] = [];\n            }\n            testing[intentKey].push(utterance);\n        }\n    };\n    await gen.datasetFromString(dsl, utteranceWriter, importer, currentPath);\n    entities.forEach(slotKey => {\n        if (!synonymsForSlots[slotKey]) {\n            if (!training.entities[slotKey]) {\n                training.entities[slotKey] = {};\n            }\n            return;\n        }\n        Object.keys(synonymsForSlots[slotKey]).forEach(synonymsValue => {\n            if (!training.entities[slotKey]) {\n                training.entities[slotKey] = {};\n            }\n            training.entities[slotKey].use_synonyms = true;\n            training.entities[slotKey].automatically_extensible = true;\n            if (!training.entities[slotKey].data) {\n                training.entities[slotKey].data = [];\n            }\n            const slotSynonymsSet = synonymsForSlots[slotKey][synonymsValue];\n            const synonymsList = slotSynonymsSet.size ? Array.from(slotSynonymsSet) : [];\n            (training.entities[slotKey].data as any[]).push({\n                synonyms: synonymsList,\n                value: synonymsValue\n            });\n        });\n    });\n    return { training, testing };\n}\n","import * as gen from '../main';\nimport { ISentenceTokens } from '../types';\nimport * as utils from '../utils';\n\nexport interface IDefaultDataset {\n    [intent: string]: ISentenceTokens[][];\n}\nexport async function adapter(dsl: string, formatOptions?: any, importer?: gen.IFileImporter, currentPath?: string) {\n    const training: IDefaultDataset = {};\n    const testing: IDefaultDataset = {};\n    if (formatOptions) {\n        utils.mergeDeep(training, formatOptions);\n    }\n    const utteranceWriter = (utterance: ISentenceTokens[], intentKey: string, isTrainingExample: boolean) => {\n        const dataset = isTrainingExample ? training : testing;\n        if (!dataset[intentKey]) {\n            dataset[intentKey] = [];\n        }\n        dataset[intentKey].push(utterance);\n    };\n    await gen.datasetFromString(dsl, utteranceWriter, importer, currentPath);\n    return { training, testing };\n}\n","import * as rasaAdapter from '../../src/adapters/rasa';\nimport * as snipsAdapter from '../../src/adapters/snips';\nimport * as webAdapter from '../../src/adapters/web';\n\nconst findRestaurantsByCity = `import ./common.chatito\n\n# Ways to request a restaurant within a location (using probability operator)\n# NOTE: 60% of the examples should come from the first sentence, and 40% from the second\n\n%[findRestaurantsByCity]('training': '100', 'testing': '100')\n    *[60%] ~[hi?] ~[please?] ~[find?] ~[restaurants] ~[located at] @[city] ~[city?] ~[thanks?]\n    *[40%] ~[restaurants] ~[located at] @[city]\n\n@[city]\n    ~[new york]\n    ~[san francisco]\n    ~[atlanta]\n\n~[find]\n    find\n    i'm looking for\n    help me find\n\n~[located at]\n    located at\n    in the area of\n    near\n\n~[restaurants]\n    restaurants\n    places to eat\n    where to eat\n`;\n\nconst affirmative = `// Ways to say yes\n\nimport ./common.chatito\n\n%[affirmative]('training': '50', 'testing': '50')\n    *[20%] ~[yes]\n    ~[yes] ~[please?]\n    ~[yes] ~[yes?] ~[thanks?]\n    ~[yes?] ~[that is good] ~[yes?]\n\n~[yes]\n    yes\n    right\n    affirmative\n    agreed\n    correct\n    yep\n    yes sir\n    sounds good\n    im ok with that\n\n~[that is good]\n    that is good\n    i want that\n    that is fine\n    that is correct\n    that is what i want\n    you understood me\n    that is right\n    its fine\n    good\n`;\n\nconst bye = `// Ways to say goodbye\n\nimport ./common.chatito\n\n%[bye]('training': '50', 'testing': '50')\n    *[20%] ~[bye]\n    ~[thanks?] ~[bye]\n    ~[bye] ~[thanks?]\n    ~[leaving]\n    ~[leaving] ~[bye]\n\n~[bye]\n    bye\n    goodbye\n    ttyl\n    gtg\n    adios\n    farewell\n    adieu\n    chao\n    chau\n\n~[leaving]\n    leaving\n    talk to you soon\n    have to go\n    got to go\n    talk to you later\n    heading out\n    im leaving now\n    going out\n`;\n\nconst greet = `// Ways to say hello\n\nimport ./common.chatito\n\n%[greet]('training': '50', 'testing': '50')\n    *[20%] ~[hi]\n    ~[greetings]\n    ~[hi] ~[greetings?]\n    ~[hi] ~[whats up]\n    ~[greetings] ~[whats up]\n    ~[hi] ~[greetings] ~[whats up]\n\n~[greetings]\n    greetings\n    good morning\n    good afternoon\n    good day\n    good night\n    morning\n\n~[whats up]\n    how are you\n    whats up\n    how are you doing\n    how is it going\n    are you there\n    how are things going\n    are you around\n    whatsup\n    sup\n    are you around?\n`;\n\nconst negative = `// Ways to say no\n\nimport ./common.chatito\n\n%[negative]('training': '50', 'testing': '50')\n    *[20%] ~[no]\n    ~[no] ~[please?] ~[its not ok?]\n    ~[please?] ~[no] ~[its not ok?]\n    *[20%] ~[its not ok]\n\n~[no]\n    no\n    nope\n    not really\n    that's not right\n    incorrect\n    don't do that\n\n~[its not ok]\n    i don't want that\n    didnt meant that\n    dont mean that\n    that's not what i want\n    that's not correct\n    that's wrong\n    it's not good\n    that is wrong\n    its not ok\n    its not correct\n`;\n\nconst common = `// Common entities to be imported and reused\n~[hi]\n    hi\n    hello\n    hey\n\n~[please]\n    please\n    plz\n    pls\n\n~[thanks]\n    thanks\n    thank you\n\n`;\n\nexport const tabs = [\n    { title: 'findRestaurantsByCity.chatito', value: findRestaurantsByCity },\n    { title: 'greet.chatito', value: greet },\n    { title: 'bye.chatito', value: bye },\n    { title: 'affirmative.chatito', value: affirmative },\n    { title: 'negative.chatito', value: negative },\n    { title: 'common.chatito', value: common }\n];\n\nexport const chatitoPrism = {\n    comments: [{ pattern: /^(\\/\\/|\\#).*/, greedy: true }, { pattern: /((\\n|\\r\\n)+)(\\/\\/|\\#).*/, greedy: true }],\n    imports: [{ pattern: /(\\n|\\r\\n)import\\s/, greedy: true }, { pattern: /^import\\s/, greedy: true }],\n    intentDefinition: [\n        {\n            pattern: /^%\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { intentArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)%\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { intentArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    slotDefinition: [\n        {\n            pattern: /^\\@\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { slotArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)\\@\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { slotArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    aliasDefinition: [\n        {\n            pattern: /^~\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { aliasArguments: /((\\(.+\\))?)$/ }\n        },\n        {\n            pattern: /((\\n|\\r\\n)+)~\\[[^\\]]+\\]((\\(.+\\))?)/,\n            inside: { aliasArguments: /((\\(.+\\))?)$/ }\n        }\n    ],\n    probability: { pattern: /(\\n|\\r\\n)\\s\\s\\s\\s\\*\\[[^\\]]+\\]/, greedy: true },\n    slot: { pattern: /\\@\\[[^\\]]+(\\?)?\\]/, greedy: true },\n    alias: { pattern: /~\\[[^\\]]+(\\?)?\\]/, greedy: true },\n    default: { pattern: /[^\\r\\n]/i, greedy: true }\n};\n\nexport const webDefaultOptions: webAdapter.IDefaultDataset = {};\nexport const rasaDefaultOptions: rasaAdapter.IRasaDataset = {\n    rasa_nlu_data: {\n        regex_features: [],\n        entity_synonyms: [],\n        common_examples: []\n    }\n};\nexport const snipsDefaultOptions: snipsAdapter.ISnipsDataset = { language: 'en', entities: {}, intents: {} };\n","import styled from 'styled-components';\n\nexport const AlertNotification = styled('div')`\n    width: 100%;\n    background-color: ${({ state }: { state: 'error' | 'warning' | 'success' }) =>\n        state === 'error' ? '#c80000' : state === 'warning' ? '#7f8000' : '#008800'};\n    bottom: 0;\n    margin: auto;\n    right: 0;\n    text-align: center;\n    padding: 12px;\n    color: white;\n    z-index: 99;\n    font-size: 14px;\n`;\n\nexport const CodeStyles = styled('div')`\n    white-space: pre-wrap;\n    position: relative;\n    margin: auto;\n    width: inherit;\n    height: calc(100vh - 210px) !important;\n    min-height: 400px;\n    background-color: #282a35;\n    > .codeflask {\n        background-color: #282a35;\n        > textarea.codeflask__textarea {\n            color: #282a35;\n            caret-color: #fff;\n        }\n        &.codeflask--has-line-numbers {\n            :before {\n                background-color: #3c3c4c;\n            }\n            > pre {\n                width: auto !important;\n            }\n            div.codeflask__lines {\n                z-index: 3;\n                height: auto !important;\n                padding: 10px 4px 0 0;\n                > .codeflask__lines__line {\n                    color: #6473a0;\n                    background-color: #3c3c4c;\n                }\n            }\n        }\n        *::-webkit-scrollbar {\n            width: 10px;\n            height: 10px;\n        }\n        *::-webkit-scrollbar-thumb {\n            background-color: #7c7c9c;\n            box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n        }\n        *::-webkit-scrollbar-track {\n            box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n        }\n        *::-webkit-scrollbar-corner {\n            background-color: transparent;\n        }\n    }\n    .token.imports {\n        color: #F7717D;\n    }\n    .token.comments {\n        color: #999;\n    }\n    .token.intentDefinition {\n        color: #ef82c3;\n    }\n    .token.slotDefinition {\n        color: #ffaf56;\n    }\n    .token.aliasDefinition {\n        color: #a0e7fb;\n    }\n    .token.probability {\n        color: #00F0B5;\n    }\n    .token.slot {\n        color: #ffaf56;\n    }\n    .token.alias {\n        color: #a0e7fb;\n    }\n    .token.default {\n        color: #e2e2dd;\n    }\n    .token.intentArguments {\n        color: #b5669e;\n    }\n    .token.slotArguments {\n        color: #7a9d98;\n    }\n    .token.aliasArguments {\n        color: #80c7db;\n    }\n`;\n\nexport const TabButton = styled('div')`\n    cursor: pointer;\n    display: inline-block;\n    background-color: ${({ active }: { active: boolean }) => (active ? '#282A35' : '#3c3c4c')};\n    font-size: 12px;\n    color: #ededed;\n    padding: 13px 3px 13px 13px;\n    border-right: 1px solid #2c2c3c;\n    zoom: 1;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n`;\n\nexport const CloseTab = styled('div')`\n    :after {\n        content: 'x';\n    }\n    padding: 8px;\n    margin-left: 8px;\n    display: inline-block;\n    color: #ccf;\n    line-height: 10px;\n    font-size: 14px;\n    cursor: pointer;\n    font-weight: bold;\n`;\n\nexport const EditorHeader = styled('div')`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    max-width: 100%;\n    background-color: #3c3c4c;\n    padding-left: 40px;\n    padding-top: 10px;\n`;\n\nexport const TabsAreaButton = styled('button')`\n    cursor: pointer;\n    background-color: #6c1de2;\n    font-size: 12px;\n    color: #efefef;\n    line-height: 14px;\n    padding: 8px 24px;\n    white-space: nowrap;\n    margin: auto 10px;\n    border-radius: 4px;\n    border-color: #333;\n    -webkit-transition: 0.25s ease;\n    -moz-transition: 0.25s ease;\n    -o-transition: 0.25s ease;\n    transition: 0.25s ease;\n    &:first-of-type {\n        margin-left: 20px;\n    }\n    :disabled {\n        border: 1px solid #999999;\n        background-color: #cccccc;\n        color: #666666;\n    }\n`;\n\nexport const TabsArea = styled('div')`\n    width: auto;\n    max-width: 100%;\n    white-space: nowrap;\n    position: relative;\n    overflow-x: auto;\n    overflow-y: hidden;\n    -webkit-overflow-scrolling: touch;\n    &::-webkit-scrollbar {\n        height: 6px;\n    }\n    &::-webkit-scrollbar-thumb {\n        background-color: #7c7c9c;\n        -webkit-box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n    }\n    &::-webkit-scrollbar-track {\n        -webkit-box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.8);\n    }\n    *::-webkit-scrollbar-corner {\n        background-color: transparent;\n    }\n`;\n\nexport const EditorWrapper = styled('div')`\n    width: 90vw;\n    overflow: auto;\n    margin: auto;\n    position: relative;\n    -webkit-box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n    -moz-box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n    box-shadow: 0px 0px 36px 2px rgba(0, 0, 0, 0.63);\n`;\n\nexport const Drawer = styled('div')`\n    z-index: 99;\n    position: absolute;\n    background-color: #352252;\n    -webkit-box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    -moz-box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    box-shadow: -5px 0px 5px -5px rgba(0, 0, 0, 0.55);\n    top: 0;\n    right: 0;\n    max-width: 700px;\n    height: 100%;\n    width: ${({ showDrawer }: { showDrawer: boolean }) => (showDrawer ? `100%` : `0px`)};\n    -webkit-transition: 0.65s ease;\n    -moz-transition: 0.65s ease;\n    -o-transition: 0.65s ease;\n    transition: 0.65s ease;\n    overflow: auto;\n`;\n\nexport const EditorOverlay = styled('div')`\n    z-index: 999;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    visibility: ${({ showDrawer }: { showDrawer: boolean }) => (showDrawer ? 'visible' : 'hidden')};\n    -webkit-transition: 0.25s ease;\n    -moz-transition: 0.25s ease;\n    -o-transition: 0.25s ease;\n    transition: 0.25s ease;\n`;\n\nexport const BlockWrapper = styled('div')`\n    background-color: #e4e4e4;\n    margin: 20px;\n    overflow: auto;\n    border-radius: 8px;\n    -webkit-box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    -moz-box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    box-shadow: 0px 0px 50px 0px rgba(0, 0, 0, 0.4);\n    clear: both;\n`;\n\nexport const BlockWrapperTitle = styled('div')`\n    background-color: #6b5a86;\n    color: #efefef;\n    font-size: 13px;\n    padding: 8px 10px;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px;\n`;\n\nexport const CloseDrawerButton = styled('div')`\n    cursor: pointer;\n    color: white;\n    font-size: 16px;\n    padding: 8px;\n    font-weight: bold;\n    margin: 8px 20px 8px 20px;\n    float: right;\n`;\n\nexport const DrawerFormField = styled('div')`\n    padding: 10px 20px;\n    display: flex;\n    align-items: center;\n    flex: 1;\n    > label {\n        font-size: 12px;\n        padding-right: 10px;\n    }\n`;\n\nexport const SelectWrapper = styled('div')`\n    position: relative;\n    z-index: 0;\n    display: inline-block;\n    overflow: hidden;\n    height: auto;\n    padding: 0 5px 0 0;\n    margin: 0 5px 0 0;\n    border-radius: 5px;\n    border: solid 1px #ccc;\n    background-color: #fff;\n    :before {\n        position: absolute;\n        z-index: 1;\n        content: '\\\\25BE';\n        top: 50%;\n        right: 10px;\n        margin-top: -9px;\n    }\n    select {\n        position: relative;\n        z-index: 2;\n        outline: none;\n        width: 120%;\n        padding: 5px 20px 5px 10px;\n        background-color: transparent;\n        background-image: none;\n        -webkit-appearance: none;\n        border: none;\n        box-shadow: none;\n    }\n`;\n\nexport const CheckboxWrapper = styled('div')`\n    font-size: 12px;\n    text-decoration: underline;\n    cursor: pointer;\n    input {\n        margin-right: 10px;\n        cursor: pointer;\n    }\n`;\n","import { saveAs } from 'file-saver';\nimport * as React from 'react';\nimport * as luisAdapter from '../../../src/adapters/luis';\nimport * as rasaAdapter from '../../../src/adapters/rasa';\nimport * as snipsAdapter from '../../../src/adapters/snips';\nimport * as webAdapter from '../../../src/adapters/web';\nimport * as chatito from '../../../src/main';\nimport * as utils from '../../../src/utils';\nimport { chatitoPrism, rasaDefaultOptions, snipsDefaultOptions, tabs } from '../../lib/editorConfig';\nimport { debounce } from '../../lib/utils';\nimport * as es from './editorStyles';\n\nconst logger = console;\n\nconst adapters = {\n    default: webAdapter,\n    rasa: rasaAdapter,\n    snips: snipsAdapter,\n    luis: luisAdapter\n};\n\ninterface IEditorState {\n    error: null | string;\n    warning: null | string;\n    activeTabIndex: number;\n    showDrawer: boolean;\n    dataset: any;\n    adapterOptions: any;\n    currentAdapter: 'default' | 'rasa' | 'snips' | 'luis';\n    useCustomOptions: boolean;\n    frequencyDistribution: 'regular' | 'even';\n}\n\ntype IDataset = webAdapter.IDefaultDataset | snipsAdapter.ISnipsDataset | rasaAdapter.IRasaDataset | luisAdapter.ILuisDataset;\n\n// NOTE: for SSR, wrap the require in check for window\nlet CodeFlask = null;\nlet ReactJson = null;\nif (typeof window !== `undefined`) {\n    // tslint:disable-next-line:no-var-requires\n    CodeFlask = require('codeflask').default;\n    // tslint:disable-next-line:no-var-requires\n    ReactJson = require('react-json-view').default;\n}\n\nexport default class Editor extends React.Component<{}, IEditorState> {\n    public state: IEditorState = {\n        error: null,\n        warning: null,\n        activeTabIndex: 0,\n        showDrawer: false,\n        dataset: null,\n        adapterOptions: null,\n        currentAdapter: 'default',\n        useCustomOptions: false,\n        frequencyDistribution: 'regular'\n    };\n    private tabsContainer = React.createRef() as React.RefObject<HTMLDivElement>;\n    private codeflask = null;\n    private editorUpdatesSetupCount = 0;\n    private codeInputValue = '';\n    private tabs: Array<{ title: string; value: string }> = [];\n\n    private debouncedTabDSLValidation = debounce(() => {\n        if (!this.codeInputValue.length) {\n            if (this.state.error || this.state.warning) {\n                this.setState({ error: null, warning: null });\n            }\n            return;\n        }\n        const validation = this.getDSLValidation(this.codeInputValue);\n        let newState = {};\n        if (validation && validation.error) {\n            newState = { error: validation.error, warning: null };\n        } else if (validation && validation.warning) {\n            newState = { error: null, warning: validation.warning };\n        } else {\n            newState = { error: null, warning: null };\n        }\n        this.setState(newState, () => {\n            this.saveToLocalStorage(true, false, false);\n        });\n    }, 300);\n\n    public componentDidMount() {\n        if (!CodeFlask) {\n            return;\n        }\n        this.loadFromLocalStorage(() => {\n            const flask = new CodeFlask('#my-code-editor', {\n                language: 'chatito',\n                lineNumbers: true\n            });\n            flask.addLanguage('chatito', chatitoPrism);\n            flask.onUpdate(code => {\n                if (!this.tabs || !this.tabs[this.state.activeTabIndex]) {\n                    return;\n                }\n                this.codeInputValue = code;\n                this.tabs[this.state.activeTabIndex].value = code;\n                // NOTE: ugly hack to know when codeflask is mounted (it makes 2 calls to update on mount)\n                if (this.editorUpdatesSetupCount < 2) {\n                    this.editorUpdatesSetupCount++;\n                } else {\n                    this.setState({ dataset: null });\n                    this.debouncedTabDSLValidation();\n                }\n            });\n            if (this.tabs && this.tabs[this.state.activeTabIndex]) {\n                flask.updateCode(this.tabs[this.state.activeTabIndex].value);\n            }\n            flask.setLineNumber();\n            this.codeflask = flask;\n        });\n    }\n\n    public render() {\n        const alertState = !!this.state.error ? 'error' : !!this.state.warning ? 'warning' : 'success';\n        return (\n            <es.EditorWrapper>\n                <es.EditorHeader>\n                    <es.TabsArea innerRef={this.tabsContainer}>{this.tabs.map(this.renderTabButton)}</es.TabsArea>\n                    <es.TabsAreaButton onClick={this.onAddFile} style={{ backgroundColor: '#1a6849' }}>\n                        New file\n                    </es.TabsAreaButton>\n                    <es.TabsAreaButton onClick={this.onToggleDrawer} disabled={!!this.state.error}>\n                        Generate Dataset\n                    </es.TabsAreaButton>\n                </es.EditorHeader>\n                <es.CodeStyles id=\"my-code-editor\" />\n                <es.AlertNotification state={alertState}>\n                    {' '}\n                    {this.state.error || this.state.warning || `Correct syntax!`}\n                </es.AlertNotification>\n                <es.EditorOverlay onClick={this.onCloseDrawer} showDrawer={this.state.showDrawer}>\n                    <es.Drawer onClick={e => e.stopPropagation()} showDrawer={this.state.showDrawer}>\n                        <es.CloseDrawerButton onClick={this.onCloseDrawer}>x</es.CloseDrawerButton>\n                        {this.renderDatasetGeneratorSettings()}\n                        {this.renderDatasetPreviewer()}\n                    </es.Drawer>\n                </es.EditorOverlay>\n            </es.EditorWrapper>\n        );\n    }\n\n    /* ================== Renderers ================== */\n    private renderDatasetGeneratorSettings = () => {\n        return (\n            <es.BlockWrapper>\n                <es.BlockWrapperTitle>Dataset generation settings</es.BlockWrapperTitle>\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <es.DrawerFormField style={{ borderRight: '1px solid #ccc' }}>\n                        <label htmlFor=\"adapterSelect\">Dataset format: </label>\n                        <es.SelectWrapper>\n                            <select\n                                id=\"adapterSelect\"\n                                name=\"adapterSelect\"\n                                onChange={this.onAdapterChange}\n                                value={this.state.currentAdapter}\n                            >\n                                <option value=\"default\">Default</option>\n                                <option value=\"rasa\">Rasa NLU</option>\n                                <option value=\"luis\">LUIS</option>\n                                <option value=\"snips\">Snips NLU</option>\n                            </select>\n                        </es.SelectWrapper>\n                    </es.DrawerFormField>\n                    <es.DrawerFormField style={{ borderRight: '1px solid #ccc' }}>\n                        <label htmlFor=\"distributionSelect\">Default distribution: </label>\n                        <es.SelectWrapper>\n                            <select\n                                id=\"distributionSelect\"\n                                name=\"distributionSelect\"\n                                onChange={this.onDistributionChange}\n                                value={this.state.frequencyDistribution}\n                            >\n                                <option value=\"regular\">Regular</option>\n                                <option value=\"even\">Even</option>\n                            </select>\n                        </es.SelectWrapper>\n                    </es.DrawerFormField>\n                    <es.DrawerFormField>\n                        <es.CheckboxWrapper>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={this.state.useCustomOptions}\n                                    onChange={this.onCustomOptionsCheckboxChange}\n                                />\n                                Use custom options\n                            </label>\n                        </es.CheckboxWrapper>\n                    </es.DrawerFormField>\n                </div>\n                <div style={{ textAlign: 'center', fontSize: 13, maxWidth: '80%', margin: '1rem auto' }}>\n                    * NLP providers like DialogFlow, Wit.ai and Watson can be used with a conversion tool. Read the&nbsp;\n                    <a href=\"https://github.com/rodrigopivi/Chatito#tools-and-resources\" target=\"_blank\">\n                        resources section\n                    </a>\n                </div>\n                {this.renderEditAdapterOptions()}\n                <div style={{ padding: 20, textAlign: 'center' }}>\n                    <es.TabsAreaButton onClick={this.generateDataset}>Generate and download dataset!</es.TabsAreaButton>\n                </div>\n            </es.BlockWrapper>\n        );\n    };\n\n    private renderEditAdapterOptions = () => {\n        if (!this.state.useCustomOptions || !ReactJson) {\n            return null;\n        }\n        return (\n            <div>\n                <div style={{ padding: '10px 20px 0 20px', fontSize: 12, borderTop: '1px solid #ccc' }}>\n                    Edit the adapter custom initial options:\n                </div>\n                <div style={{ flex: '1', margin: '10px 20px' }}>\n                    <ReactJson\n                        style={{ padding: '10px' }}\n                        src={this.state.adapterOptions || {}}\n                        theme=\"summerfruit:inverted\"\n                        iconStyle=\"square\"\n                        enableClipboard={false}\n                        displayDataTypes={false}\n                        name={false}\n                        collapsed={false}\n                        onEdit={this.onEditAdapterOptions}\n                        onAdd={this.onEditAdapterOptions}\n                        onDelete={this.onEditAdapterOptions}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private renderDatasetPreviewer = () => {\n        if (!this.state.dataset || !ReactJson) {\n            return null;\n        }\n        return (\n            <es.BlockWrapper>\n                <es.BlockWrapperTitle>Review the generated training dataset</es.BlockWrapperTitle>\n                <ReactJson\n                    style={{ padding: 20 }}\n                    src={this.state.dataset}\n                    theme=\"chalk\"\n                    iconStyle=\"square\"\n                    enableClipboard={false}\n                    displayDataTypes={false}\n                    name={false}\n                    collapsed={2}\n                />\n            </es.BlockWrapper>\n        );\n    };\n\n    private renderTabButton = (t, i) => {\n        const changeTab = () => this.changeTab(i);\n        const onCloseTab = this.closerTab(i);\n        return (\n            <es.TabButton active={this.state.activeTabIndex === i} key={`tab-${i}`} onClick={changeTab}>\n                {t.title}\n                <es.CloseTab onClick={onCloseTab} />\n            </es.TabButton>\n        );\n    };\n\n    /* ================== Event Handlers ================== */\n    private onCloseDrawer = () => this.setState({ showDrawer: false, dataset: null });\n\n    private onCustomOptionsCheckboxChange = e => {\n        let adapterOptions = {};\n        if (this.state.currentAdapter === 'rasa') {\n            adapterOptions = Object.assign({}, rasaDefaultOptions);\n        } else if (this.state.currentAdapter === 'snips') {\n            adapterOptions = Object.assign({}, snipsDefaultOptions);\n        }\n        this.setState({ useCustomOptions: e.target.checked, adapterOptions, dataset: null }, () => {\n            this.saveToLocalStorage(false, true, true);\n        });\n    };\n\n    private onAdapterChange = e => {\n        let adapterOptions = {};\n        if (e.target.value === 'rasa') {\n            adapterOptions = Object.assign({}, rasaDefaultOptions);\n        } else if (e.target.value === 'snips') {\n            adapterOptions = Object.assign({}, snipsDefaultOptions);\n        }\n        this.setState({ currentAdapter: e.target.value, adapterOptions, dataset: null }, () => {\n            this.saveToLocalStorage(false, true, true);\n        });\n    };\n\n    private onDistributionChange = e => {\n        this.setState(\n            {\n                frequencyDistribution: e.target.value === 'even' ? 'even' : 'regular',\n                dataset: null\n            },\n            () => this.saveToLocalStorage(false, true, true)\n        );\n    };\n\n    private onEditAdapterOptions = changes => {\n        if (changes && changes.updated_src) {\n            this.setState({ adapterOptions: changes.updated_src }, () => {\n                this.saveToLocalStorage(false, true, false);\n            });\n            return null;\n        }\n        return false;\n    };\n\n    private onAddFile = () => {\n        let filename = 'newFile';\n        if (window && window.prompt) {\n            filename = prompt('Please enter the new .chatito file name:', filename);\n        }\n        if (filename) {\n            this.tabs.push({ title: `${filename}.chatito`, value: '' });\n            this.changeTab(this.tabs.length - 1, () => {\n                this.tabsContainer.current.scrollTo({\n                    left: this.tabsContainer.current.scrollWidth,\n                    behavior: 'smooth'\n                });\n            });\n        }\n    };\n\n    private onToggleDrawer = async () => {\n        if (!this.state.showDrawer) {\n            if (this.validateChatitoFiles()) {\n                try {\n                    this.setState({ showDrawer: !this.state.showDrawer });\n                } catch (e) {\n                    return;\n                }\n            } else {\n                if (window && window.alert) {\n                    window.alert('Please fix the errors or warnings found in the code.');\n                }\n            }\n        }\n    };\n\n    /* ================== Utils ================== */\n\n    private saveToLocalStorage = (saveTabs, saveAdapterOptions, saveCurrentAdapter) => {\n        if (window && localStorage) {\n            if (saveTabs) {\n                localStorage.setItem('___tabs', JSON.stringify(this.tabs));\n            }\n            if (saveAdapterOptions) {\n                localStorage.setItem('___adapterOptions', this.state.useCustomOptions ? JSON.stringify(this.state.adapterOptions) : '');\n                localStorage.setItem('___defaultDistribution', this.state.frequencyDistribution);\n            }\n            if (saveCurrentAdapter) {\n                localStorage.setItem('___currentAdapter', this.state.currentAdapter);\n            }\n        }\n    };\n\n    private loadFromLocalIfPresent = (key: string, parseAsJSON: boolean) => {\n        if (window && localStorage) {\n            try {\n                const item = localStorage.getItem(key);\n                if (!parseAsJSON) {\n                    return item;\n                }\n                if (item) {\n                    try {\n                        return JSON.parse(item);\n                    } catch (e) {\n                        // just catch the error\n                    }\n                }\n            } catch (e) {\n                logger.error(e);\n            }\n        }\n    };\n\n    private loadFromLocalStorage = (cb: () => void) => {\n        if (window && localStorage) {\n            const newState: any = {};\n            const localTabs = this.loadFromLocalIfPresent('___tabs', true);\n            const localAdapterOptions = this.loadFromLocalIfPresent('___adapterOptions', true);\n            const localCurrentAdapter = this.loadFromLocalIfPresent('___currentAdapter', false);\n            const localDefaultDistribution: 'regular' | 'even' | undefined = this.loadFromLocalIfPresent('___defaultDistribution', false);\n            this.tabs = localTabs ? localTabs : tabs;\n            if (localAdapterOptions) {\n                newState.adapterOptions = localAdapterOptions;\n                newState.useCustomOptions = true;\n            }\n            if (localCurrentAdapter) {\n                newState.currentAdapter = localCurrentAdapter;\n            }\n            if (localDefaultDistribution) {\n                newState.frequencyDistribution = localDefaultDistribution;\n            }\n            this.setState(newState, cb);\n        } else {\n            this.tabs = tabs;\n        }\n        cb();\n    };\n\n    private changeTab = (i: number, cb?: () => void) => {\n        this.setState({ activeTabIndex: i }, () => {\n            this.codeflask.updateCode(this.tabs[this.state.activeTabIndex].value);\n            this.codeflask.setLineNumber();\n            if (cb) {\n                setTimeout(cb, 600); // note; hack using setTimeout because codeflask uses a timeout on update code\n            }\n        });\n    };\n\n    private closerTab = (i: number) => {\n        return (e: React.SyntheticEvent) => {\n            if (e) {\n                e.stopPropagation();\n            }\n            if (this.tabs[i].value) {\n                if (!window.confirm(`Do you really want to remove '${this.tabs[i].title}'?`)) {\n                    return;\n                }\n            }\n            const ati = this.state.activeTabIndex;\n            let newActiveTabIndex = this.state.activeTabIndex;\n            if (ati === i && ati > 0) {\n                newActiveTabIndex = ati - 1;\n            }\n            this.tabs = [...this.tabs.slice(0, i), ...this.tabs.slice(i + 1)];\n            if (!this.tabs.length) {\n                this.tabs.push({ title: 'newFile.chatito', value: '' });\n                newActiveTabIndex = 0;\n            }\n            this.saveToLocalStorage(true, false, false);\n            this.changeTab(newActiveTabIndex);\n        };\n    };\n\n    private getDSLValidation = (dsl: string): null | { error?: string; warning?: string } => {\n        try {\n            const ast = chatito.astFromString(dsl);\n            const intentsWithoutLimit = ast.filter(entity => entity.type === 'IntentDefinition' && entity.args === null);\n            if (intentsWithoutLimit.length) {\n                return {\n                    warning: `Warning: Limit the number of generated examples for intents. E.g.: %[${\n                        intentsWithoutLimit[0].key\n                    }]('training': '100')`\n                };\n            }\n            return null;\n        } catch (e) {\n            const error =\n                e.constructor === Error\n                    ? e.toString()\n                    : `${e.name}: ${e.message} Line: ${e.location.start.line}, Column: ${e.location.start.column}`;\n            return { error };\n        }\n    };\n\n    private validateChatitoFiles = () => {\n        return !this.tabs.some((tab, i) => {\n            if (tab.value) {\n                const validation = this.getDSLValidation(tab.value);\n                if (validation !== null) {\n                    this.changeTab(i);\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n\n    private importFile = (startPath: string, endPath: string) => {\n        const filename = endPath.replace(/^\\.\\//, '');\n        const tabFound = this.tabs.find(t => t.title.trim() === filename);\n        if (!tabFound) {\n            throw new Error(`Can't import ${endPath}. Not found.`);\n        }\n        // note: returning empty path since there is no actual filesystem\n        return { filePath: '', dsl: tabFound.value };\n    };\n\n    private generateDataset = async () => {\n        let dataset: IDataset | null = null;\n        const testingDataset = {};\n        const adapter = adapters[this.state.currentAdapter];\n        if (!adapter) {\n            return;\n        }\n        chatito.config.defaultDistribution = this.state.frequencyDistribution;\n        for (const [i, tab] of this.tabs.entries()) {\n            try {\n                if (dataset === null && this.state.useCustomOptions && this.state.adapterOptions) {\n                    dataset = JSON.parse(JSON.stringify(this.state.adapterOptions));\n                }\n                const { training, testing } = await adapter.adapter(tab.value, dataset, this.importFile, '');\n                dataset = training;\n                utils.mergeDeep(testingDataset, testing);\n            } catch (e) {\n                this.setState({ dataset: null, showDrawer: false }, () => {\n                    this.changeTab(i, () =>\n                        this.setState({ error: e.message }, () => {\n                            if (window && window.alert) {\n                                logger.log(e);\n                                window.alert(`Please fix error: ${e.message}`);\n                            }\n                        })\n                    );\n                });\n                return;\n            }\n        }\n        const datasetBlob = new Blob([JSON.stringify(dataset)], { type: 'text/json;charset=utf-8' });\n        const testingBlob = new Blob([JSON.stringify(testingDataset)], { type: 'text/json;charset=utf-8' });\n        saveAs(datasetBlob, `training_dataset_${Math.round(new Date().getTime() / 1000)}.json`);\n        setTimeout(() => {\n            saveAs(testingBlob, `testing_dataset_${Math.round(new Date().getTime() / 1000)}.json`);\n        }, 100); // note: timeout to allow multiple downloads at once\n        this.setState({ dataset });\n    };\n}\n","export function debounce(func, wait) {\n    let timeout;\n    return function(...args) {\n        const context = this;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => func.apply(context, args), wait);\n    };\n}\n","import styled, { createGlobalStyle } from 'styled-components';\n\n// tslint:disable-next-line:no-unused-expression\nexport const Global: any = createGlobalStyle`\n  *, *::after, *::before {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  :focus { outline: none; }\n  h1, h2 { display: inline; font-size: 20px; }\n  ::-moz-focus-inner { border: 0; }\n  html, body, #app {\n      padding: 0;\n      margin: 0;\n      display: flex;\n      flex-direction: column;\n      flex: 1;\n      height: auto !important;\n      font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif;\n      background-color: #ccc;\n  }\n  a { text-decoration: none; }\n  body {\n      box-sizing: border-box;\n      min-height: 100vh;\n      background: #ececec;\n      padding: 0;\n  }\n  a:focus, a:active, a:any-link { text-decoration: none; }\n`;\n\nexport const Header = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    h1,\n    h2 {\n        display: inline;\n    }\n    a {\n        text-decoration: none;\n        color: #990adb;\n    }\n    a:hover {\n        color: #b92afb;\n    }\n    color: '#444';\n    margin: 20px;\n`;\n","import * as React from 'react';\n\nexport default function Logo() {\n    return (\n        <svg fill=\"#990ADB\" viewBox=\"0 0 14 12\" version=\"1.1\" x=\"0px\" y=\"0px\">\n            <g stroke=\"none\" fill=\"none\">\n                <g fill=\"#990ADB\">\n                    <path d=\"M7.032,5.504 C6.672,5.504 6.384,5.792 6.384,6.152 C6.384,6.512 6.672,6.8 7.032,6.8 C7.392,6.8 7.68,6.512 7.68,6.152 C7.688,5.792 7.392,5.504 7.032,5.504 Z M3.88,5.504 C3.52,5.504 3.232,5.792 3.232,6.152 C3.232,6.512 3.52,6.8 3.88,6.8 C4.24,6.8 4.528,6.512 4.528,6.152 C4.528,5.792 4.24,5.504 3.88,5.504 Z M9.544,6.152 C9.544,6.512 9.832,6.8 10.192,6.8 C10.552,6.8 10.84,6.512 10.84,6.152 C10.84,5.792 10.552,5.504 10.192,5.504 C9.832,5.504 9.544,5.792 9.544,6.152 Z\" />\n                    <path d=\"M13.024,3.096 L13.024,3.08 C13.024,2.744 12.856,1.272 12.368,0.816 C12.208,0.664 12.048,0.64 11.944,0.648 C11.544,0.664 10.976,1.088 10.336,1.6 C10.264,1.656 10.184,1.72 10.12,1.768 L4.328,1.768 C4.184,1.768 4.032,1.76 3.888,1.768 C3.856,1.744 3.832,1.736 3.8,1.704 C3.232,1.16 2.68,0.664 2.24,0.648 C2.136,0.64 1.976,0.672 1.816,0.816 C1.376,1.232 1.192,2.48 1.16,2.952 C1.136,2.968 1.12,2.984 1.104,3.008 C0.624,3.624 0.312,4.584 0.312,5.456 L0.312,6.8 C0.312,8.064 1.024,9.184 2.104,9.848 L2.104,11.392 C2.104,11.456 2.152,11.504 2.216,11.504 C2.248,11.504 2.272,11.496 2.296,11.472 L3.392,10.376 C3.728,10.456 4.08,10.496 4.424,10.496 L9.752,10.496 C11.992,10.496 13.752,8.872 13.752,6.8 L13.752,5.456 C13.752,4.624 13.472,3.704 13.024,3.096 Z M13.08,6.8 C13.08,8.496 11.616,9.824 9.752,9.824 L4.424,9.824 C2.528,9.824 0.984,8.464 0.984,6.8 L0.984,5.456 C0.984,4.736 1.248,3.92 1.632,3.424 C1.648,3.4 1.672,3.368 1.688,3.344 C1.824,3.192 1.816,3.064 1.832,2.888 C1.848,2.68 1.88,2.472 1.928,2.264 C1.984,1.968 2.048,1.552 2.248,1.32 C2.424,1.376 2.784,1.664 3.328,2.184 C3.584,2.424 3.744,2.44 4,2.44 L10.024,2.44 C10.248,2.44 10.392,2.416 10.76,2.128 C10.992,1.944 11.672,1.408 11.936,1.336 C12.128,1.552 12.36,2.536 12.36,3.048 C12.352,3.184 12.384,3.312 12.464,3.424 C12.84,3.92 13.088,4.776 13.088,5.472 L13.08,6.8 Z\" />\n                </g>\n            </g>\n        </svg>\n    );\n}\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport Editor from '../components/Editor/Editor';\nimport { Global, Header } from '../components/globalStyles';\nimport Logo from '../components/Logo';\n\n// NOTE: gatsby global for prefix\ndeclare var __PATH_PREFIX__;\n\nexport default class Index extends React.Component<{}, {}> {\n    public render() {\n        return (\n            <div>\n                <Helmet>\n                    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`${__PATH_PREFIX__}/apple-touch-icon.png`} />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`${__PATH_PREFIX__}/favicon-32x32.png`} />\n                    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`${__PATH_PREFIX__}/favicon-16x16.png`} />\n                    <link rel=\"manifest\" href={`${__PATH_PREFIX__}/site.webmanifest`} />\n                    <link rel=\"mask-icon\" href={`${__PATH_PREFIX__}/safari-pinned-tab.svg`} color=\"#5bbad5\" />\n                    <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n                    <meta name=\"theme-color\" content=\"#ffffff\" />\n                    <title>Chatito DSL - Generate dataset for chatbots</title>\n                    <meta\n                        name=\"keywords\"\n                        content=\"chatbot, dataset generation, dataset generator, generate datasets, rasa nlu, snips nlu, chatbot dataset, datasets for chatbots\"\n                    />\n                    <meta\n                        name=\"description\"\n                        content=\"Chatito helps you helps you generate datasets for natural language understanding models using a simple DSL\"\n                    />\n                </Helmet>\n                <Global />\n                <Header>\n                    <div style={{ display: 'inline-block', width: 50, minWidth: 50, height: 43 }}>\n                        <Logo />\n                    </div>\n                    <div style={{ paddingLeft: 24 }}>\n                        <h1>\n                            <a href=\"https://github.com/rodrigopivi/Chatito\">Chatito</a>\n                        </h1>\n                        <h2>\n                            &nbsp;helps you generate datasets for natural language understanding models using a simple DSL&nbsp;\n                            <a href=\"https://github.com/rodrigopivi/Chatito\">Read the docs</a>\n                        </h2>\n                    </div>\n                </Header>\n                <Editor />\n            </div>\n        );\n    }\n}\n","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { Start: peg$parseStart },\n      peg$startRuleFunction  = peg$parseStart,\n\n      peg$c0 = function(od) { return od; },\n      peg$c1 = \"*[\",\n      peg$c2 = peg$literalExpectation(\"*[\", false),\n      peg$c3 = \"%\",\n      peg$c4 = peg$literalExpectation(\"%\", false),\n      peg$c5 = \"]\",\n      peg$c6 = peg$literalExpectation(\"]\", false),\n      peg$c7 = function(probability, percent) { return `${probability}${percent || ''}`; },\n      peg$c8 = \"?\",\n      peg$c9 = peg$literalExpectation(\"?\", false),\n      peg$c10 = \"[\",\n      peg$c11 = peg$literalExpectation(\"[\", false),\n      peg$c12 = function(value) { return value },\n      peg$c13 = function(value, opt) { return { value: value, opt: !!opt  }; },\n      peg$c14 = function(value, args) { return { value: value, type: \"IntentDefinition\", args: args, location: location() } },\n      peg$c15 = \"\\r\\n\",\n      peg$c16 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c17 = \"\\n\",\n      peg$c18 = peg$literalExpectation(\"\\n\", false),\n      peg$c19 = \"~[\",\n      peg$c20 = peg$literalExpectation(\"~[\", false),\n      peg$c21 = \"@[\",\n      peg$c22 = peg$literalExpectation(\"@[\", false),\n      peg$c23 = peg$anyExpectation(),\n      peg$c24 = function(t) { return t.join(\"\"); },\n      peg$c25 = function(v) { return v.join(\"\"); },\n      peg$c26 = function(value) { return { value: value, type: \"Text\" }},\n      peg$c27 = function(p, s) { return { sentence: s, probability: p }; },\n      peg$c28 = function(o, s) { return { type: o.type, key: o.value, args: o.args, location: o.location, inner: s } },\n      peg$c29 = \"#\",\n      peg$c30 = peg$literalExpectation(\"#\", false),\n      peg$c31 = function(id) { return id },\n      peg$c32 = function(value, variation, args) { return { value: value, type: \"SlotDefinition\", variation: variation, args: args, location: location() } },\n      peg$c33 = function(value, variation, opt) { return { value: value, opt: !!opt, variation: variation }; },\n      peg$c34 = \"@\",\n      peg$c35 = peg$literalExpectation(\"@\", false),\n      peg$c36 = function(op) { return { value: op.value, type: \"Slot\", opt: op.opt, location: location(), variation: op.variation } },\n      peg$c37 = function(o, s) { return { type: o.type, key: o.value, args: o.args, location: o.location, inner: s, variation: o.variation } },\n      peg$c38 = \"~\",\n      peg$c39 = peg$literalExpectation(\"~\", false),\n      peg$c40 = function(value, args) { return { value: value, type: \"AliasDefinition\", location: location(), args: args } },\n      peg$c41 = function(op) { return { value: op.value, type: \"Alias\", opt: op.opt } },\n      peg$c42 = function(o, s) { return { type: o.type, key: o.value, location: o.location, inner: s, args: o.args } },\n      peg$c43 = peg$otherExpectation(\"correct indentation\"),\n      peg$c44 = \" \",\n      peg$c45 = peg$literalExpectation(\" \", false),\n      peg$c46 = function(s) { return s.length === level * STEP; },\n      peg$c47 = function() { level++; return true; },\n      peg$c48 = function() { level--; return true; },\n      peg$c49 = \"//\",\n      peg$c50 = peg$literalExpectation(\"//\", false),\n      peg$c51 = function(c) { return { type: \"Comment\" , value: c.trim() }; },\n      peg$c52 = \"import \",\n      peg$c53 = peg$literalExpectation(\"import \", false),\n      peg$c54 = function(s) { return { type: \"ImportFile\", value: s.trim() }; },\n      peg$c55 = peg$otherExpectation(\"entity name\"),\n      peg$c56 = peg$otherExpectation(\"number\"),\n      peg$c57 = function() { return parseFloat(text()); },\n      peg$c58 = \".\",\n      peg$c59 = peg$literalExpectation(\".\", false),\n      peg$c60 = /^[1-9]/,\n      peg$c61 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c62 = /^[0-9]/,\n      peg$c63 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c64 = \"0\",\n      peg$c65 = peg$literalExpectation(\"0\", false),\n      peg$c66 = peg$otherExpectation(\"end of sentence\"),\n      peg$c67 = peg$otherExpectation(\"end of line \"),\n      peg$c68 = peg$otherExpectation(\"non windows end of line\"),\n      peg$c69 = peg$otherExpectation(\"windows end of line\"),\n      peg$c70 = \"(\",\n      peg$c71 = peg$literalExpectation(\"(\", false),\n      peg$c72 = \")\",\n      peg$c73 = peg$literalExpectation(\")\", false),\n      peg$c74 = function(args) {\n          return args.reduce(function (prev, curr) { prev[curr.key] = curr.value; return prev; }, {});\n      },\n      peg$c75 = \":\",\n      peg$c76 = peg$literalExpectation(\":\", false),\n      peg$c77 = \",\",\n      peg$c78 = peg$literalExpectation(\",\", false),\n      peg$c79 = function(ek, ev) { return { key: ek, value: ev }; },\n      peg$c80 = \"\\\"\",\n      peg$c81 = peg$literalExpectation(\"\\\"\", false),\n      peg$c82 = function(chars) { return chars.join(''); },\n      peg$c83 = \"'\",\n      peg$c84 = peg$literalExpectation(\"'\", false),\n      peg$c85 = \"\\\\\",\n      peg$c86 = peg$literalExpectation(\"\\\\\", false),\n      peg$c87 = function(char) { return char; },\n      peg$c88 = function(sequence) { return sequence; },\n      peg$c89 = \"b\",\n      peg$c90 = peg$literalExpectation(\"b\", false),\n      peg$c91 = function() { return \"\\b\";   },\n      peg$c92 = \"f\",\n      peg$c93 = peg$literalExpectation(\"f\", false),\n      peg$c94 = function() { return \"\\f\";   },\n      peg$c95 = \"n\",\n      peg$c96 = peg$literalExpectation(\"n\", false),\n      peg$c97 = function() { return \"\\n\";   },\n      peg$c98 = \"r\",\n      peg$c99 = peg$literalExpectation(\"r\", false),\n      peg$c100 = function() { return \"\\r\";   },\n      peg$c101 = \"t\",\n      peg$c102 = peg$literalExpectation(\"t\", false),\n      peg$c103 = function() { return \"\\t\";   },\n      peg$c104 = \"v\",\n      peg$c105 = peg$literalExpectation(\"v\", false),\n      peg$c106 = function() { return \"\\x0B\"; },\n      peg$c107 = \"u\",\n      peg$c108 = peg$literalExpectation(\"u\", false),\n      peg$c109 = function(digits) { return String.fromCharCode(parseInt(digits, 16)); },\n      peg$c110 = /^[0-9a-f]/i,\n      peg$c111 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"f\"]], false, true),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseStart() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseImportFile();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseTopLevelStatement();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseCommentLine();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseImportFile();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseTopLevelStatement();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseCommentLine();\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTopLevelStatement() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseIntentDefinition();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSlotDefinition();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseAliasDefinition();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseProbabilityOperatorDefinition() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c1) {\n      s1 = peg$c1;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNumber();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 37) {\n          s3 = peg$c3;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c5;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityOpt() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s0 = peg$c8;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityBody() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c10;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c5;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c12(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityOptionalBody() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c10;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityOpt();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c5;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c13(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityIntentDefinition() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 37) {\n      s1 = peg$c3;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c4); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityBody();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityArguments();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c14(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithSlotAndAlias() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n          s7 = peg$c19;\n          peg$currPos += 2;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.substr(peg$currPos, 2) === peg$c21) {\n            s8 = peg$c21;\n            peg$currPos += 2;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c22); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s8 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7, s8];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 2) === peg$c19) {\n              s7 = peg$c19;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.substr(peg$currPos, 2) === peg$c21) {\n                s8 = peg$c21;\n                peg$currPos += 2;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c22); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7, s8];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotKeywordLiterals() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnyTextWithSlotAndAlias();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c26(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotValidInner() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseOptionalSlot();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseOptionalAlias();\n      if (s1 === peg$FAILED) {\n        s1 = peg$parseIntentAndSlotKeywordLiterals();\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseOptionalSlot();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseOptionalAlias();\n          if (s1 === peg$FAILED) {\n            s1 = peg$parseIntentAndSlotKeywordLiterals();\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotInnerStatements() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseIntentAndSlotInnerStatement();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseIntentAndSlotInnerStatement();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentAndSlotInnerStatement() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSamedent();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProbabilityOperatorDefinition();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseIntentAndSlotValidInner();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c27(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseIntentDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityIntentDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseIntentAndSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c28(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotVariationStartDefinition() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s0 = peg$c29;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotVariationDefinition() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSlotVariationStartDefinition();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c31(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntitySlotDefinition() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c21) {\n      s1 = peg$c21;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotVariationDefinition();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s4 = peg$c5;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseEntityArguments();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c32(s2, s3, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotOptionalBody() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c10;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c11); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotKeywordLiteral();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotVariationDefinition();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEntityOpt();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s5 = peg$c5;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c33(s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOptionalSlot() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c34;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c35); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSlotOptionalBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c36(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithAlias() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n          s7 = peg$c19;\n          peg$currPos += 2;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n          if (s7 !== peg$FAILED) {\n            s4 = [s4, s5, s6, s7];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.substr(peg$currPos, 2) === peg$c19) {\n              s7 = peg$c19;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseSlotKeywordLiterals() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnyTextWithAlias();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c26(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseSlotValidInner() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseOptionalAlias();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSlotKeywordLiterals();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseOptionalAlias();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseSlotKeywordLiterals();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotInnerStatement() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseSamedent();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseProbabilityOperatorDefinition();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSlotValidInner();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c27(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotInnerStatements() {\n    var s0, s1;\n\n    s0 = [];\n    s1 = peg$parseSlotInnerStatement();\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseSlotInnerStatement();\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntitySlotDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c37(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityAliasDefinition() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c38;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityBody();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEntityArguments();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c40(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseOptionalAlias() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 126) {\n      s1 = peg$c38;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityOptionalBody();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c41(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAliasDefinition() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseEntityAliasDefinition();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseIndent();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseIntentAndSlotInnerStatements();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseDedent();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c42(s2, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseSamedent() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c44;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c44;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c46(s1);\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseIndent() {\n    var s0;\n\n    peg$savedPos = peg$currPos;\n    s0 = peg$c47();\n    if (s0) {\n      s0 = void 0;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseDedent() {\n    var s0;\n\n    peg$savedPos = peg$currPos;\n    s0 = peg$c48();\n    if (s0) {\n      s0 = void 0;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseAnyTextWithoutEOL() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s6 !== peg$FAILED) {\n          s4 = [s4, s5, s6];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s6 !== peg$FAILED) {\n              s4 = [s4, s5, s6];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseDoubleSlashCommentLine() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c49) {\n        s2 = peg$c49;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c50); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAnyTextWithoutEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c51(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseHashCommentLine() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s2 = peg$c29;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c30); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAnyTextWithoutEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c51(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentLine() {\n    var s0;\n\n    s0 = peg$parseDoubleSlashCommentLine();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseHashCommentLine();\n    }\n\n    return s0;\n  }\n\n  function peg$parseImportFile() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseEOL();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 7) === peg$c52) {\n        s2 = peg$c52;\n        peg$currPos += 7;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c53); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseAnyTextWithoutEOL();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseEOS();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c54(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseBasicKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s7 = peg$c5;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s7 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\n          }\n          if (s7 !== peg$FAILED) {\n            s4 = [s4, s5, s6, s7];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s7 = peg$c5;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s7 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s7 = peg$c5;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 63) {\n            s8 = peg$c8;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s8 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s8 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s8 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7, s8];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s7 = peg$c5;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 63) {\n                s8 = peg$c8;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c9); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s8 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s8 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                }\n                if (s8 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7, s8];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSlotKeywordLiteral() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    s4 = peg$currPos;\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s5 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s5 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s5 === peg$FAILED) {\n      s4 = void 0;\n    } else {\n      peg$currPos = s4;\n      s4 = peg$FAILED;\n    }\n    if (s4 !== peg$FAILED) {\n      s5 = peg$currPos;\n      peg$silentFails++;\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s6 = peg$c17;\n        peg$currPos++;\n      } else {\n        s6 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      peg$silentFails--;\n      if (s6 === peg$FAILED) {\n        s5 = void 0;\n      } else {\n        peg$currPos = s5;\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s7 = peg$c29;\n          peg$currPos++;\n        } else {\n          s7 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c30); }\n        }\n        peg$silentFails--;\n        if (s7 === peg$FAILED) {\n          s6 = void 0;\n        } else {\n          peg$currPos = s6;\n          s6 = peg$FAILED;\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s8 = peg$c5;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          peg$silentFails--;\n          if (s8 === peg$FAILED) {\n            s7 = void 0;\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 63) {\n              s9 = peg$c8;\n              peg$currPos++;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c9); }\n            }\n            peg$silentFails--;\n            if (s9 === peg$FAILED) {\n              s8 = void 0;\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            if (s8 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s9 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c23); }\n              }\n              if (s9 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7, s8, s9];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c24(s3);\n    }\n    s2 = s3;\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        s4 = peg$currPos;\n        peg$silentFails++;\n        if (input.substr(peg$currPos, 2) === peg$c15) {\n          s5 = peg$c15;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c16); }\n        }\n        peg$silentFails--;\n        if (s5 === peg$FAILED) {\n          s4 = void 0;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 10) {\n            s6 = peg$c17;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          peg$silentFails--;\n          if (s6 === peg$FAILED) {\n            s5 = void 0;\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$currPos;\n            peg$silentFails++;\n            if (input.charCodeAt(peg$currPos) === 35) {\n              s7 = peg$c29;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c30); }\n            }\n            peg$silentFails--;\n            if (s7 === peg$FAILED) {\n              s6 = void 0;\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s8 = peg$c5;\n                peg$currPos++;\n              } else {\n                s8 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$currPos;\n                peg$silentFails++;\n                if (input.charCodeAt(peg$currPos) === 63) {\n                  s9 = peg$c8;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c9); }\n                }\n                peg$silentFails--;\n                if (s9 === peg$FAILED) {\n                  s8 = void 0;\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.length > peg$currPos) {\n                    s9 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c23); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s4 = [s4, s5, s6, s7, s8, s9];\n                    s3 = s4;\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c24(s3);\n        }\n        s2 = s3;\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c25(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c55); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseint();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsefrac();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c57();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c56); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDecimalPoint() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c58;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c59); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit1_9() {\n    var s0;\n\n    if (peg$c60.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c61); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDigit0_9() {\n    var s0;\n\n    if (peg$c62.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c63); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefrac() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseDecimalPoint();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDigit0_9();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDigit0_9();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parsezero();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseDigit1_9();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseDigit0_9();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDigit0_9();\n        }\n        if (s2 !== peg$FAILED) {\n          s1 = [s1, s2];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsezero() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s0 = peg$c64;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c65); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOS() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parseEOL();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseEOF();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c66); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOL() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseEOLNonWindows();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseEOLWindows();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parseEOLNonWindows();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parseEOLWindows();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c67); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOLNonWindows() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c17;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c68); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOLWindows() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c15) {\n      s0 = peg$c15;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c69); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseEOF() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    peg$silentFails++;\n    if (input.length > peg$currPos) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    peg$silentFails--;\n    if (s1 === peg$FAILED) {\n      s0 = void 0;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityArguments() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c70;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c71); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseEntityArg();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseEntityArg();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c72;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c73); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c74(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseEntityArg() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s2 = peg$c44;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c44;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseArgumentKeyValueString();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s4 = peg$c44;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c45); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (input.charCodeAt(peg$currPos) === 32) {\n            s4 = peg$c44;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\n          }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s4 = peg$c75;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c76); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            if (input.charCodeAt(peg$currPos) === 32) {\n              s6 = peg$c44;\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c45); }\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              if (input.charCodeAt(peg$currPos) === 32) {\n                s6 = peg$c44;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c45); }\n              }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseArgumentKeyValueString();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$currPos;\n                s8 = [];\n                if (input.charCodeAt(peg$currPos) === 32) {\n                  s9 = peg$c44;\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                }\n                while (s9 !== peg$FAILED) {\n                  s8.push(s9);\n                  if (input.charCodeAt(peg$currPos) === 32) {\n                    s9 = peg$c44;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                  }\n                }\n                if (s8 === peg$FAILED) {\n                  s8 = null;\n                }\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 44) {\n                    s9 = peg$c77;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c78); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    s8 = [s8, s9];\n                    s7 = s8;\n                  } else {\n                    peg$currPos = s7;\n                    s7 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = [];\n                  if (input.charCodeAt(peg$currPos) === 32) {\n                    s9 = peg$c44;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                  }\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    if (input.charCodeAt(peg$currPos) === 32) {\n                      s9 = peg$c44;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                    }\n                  }\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c79(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseArgumentKeyValueString() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c80;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDoubleQuotedString();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseDoubleQuotedString();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c80;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c81); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c82(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c83;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c84); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseSingleQuotedString();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseSingleQuotedString();\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c83;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c84); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c82(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDoubleQuotedString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s2 = peg$c80;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c81); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c85;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s2 = peg$c17;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c87(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c85;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseStringEscapedChars();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c88(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseSingleQuotedString() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s2 = peg$c83;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c84); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c85;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 10) {\n          s2 = peg$c17;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c87(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c85;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseStringEscapedChars();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c88(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseStringEscapedChars() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s0 = peg$c83;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c84); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s0 = peg$c80;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c81); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s0 = peg$c85;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c86); }\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 98) {\n            s1 = peg$c89;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c90); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c91();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 102) {\n              s1 = peg$c92;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c93); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c94();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 110) {\n                s1 = peg$c95;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c96); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c97();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 114) {\n                  s1 = peg$c98;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c99); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c100();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.charCodeAt(peg$currPos) === 116) {\n                    s1 = peg$c101;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c102); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c103();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 118) {\n                      s1 = peg$c104;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c105); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c106();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.charCodeAt(peg$currPos) === 117) {\n                        s1 = peg$c107;\n                        peg$currPos++;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c108); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        s2 = peg$currPos;\n                        s3 = peg$currPos;\n                        s4 = peg$parseHEXDIG();\n                        if (s4 !== peg$FAILED) {\n                          s5 = peg$parseHEXDIG();\n                          if (s5 !== peg$FAILED) {\n                            s6 = peg$parseHEXDIG();\n                            if (s6 !== peg$FAILED) {\n                              s7 = peg$parseHEXDIG();\n                              if (s7 !== peg$FAILED) {\n                                s4 = [s4, s5, s6, s7];\n                                s3 = s4;\n                              } else {\n                                peg$currPos = s3;\n                                s3 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s3;\n                              s3 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s3;\n                            s3 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$FAILED;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          s2 = input.substring(s2, peg$currPos);\n                        } else {\n                          s2 = s3;\n                        }\n                        if (s2 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c109(s2);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseHEXDIG() {\n    var s0;\n\n    if (peg$c110.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c111); }\n    }\n\n    return s0;\n  }\n\n   var STEP = 4; var level = 0; var entry = false; \n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n"],"sourceRoot":""}